{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppColors from \"../styles/AppColors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Button(_ref) {\n  var label = _ref.label,\n    theme = _ref.theme,\n    onPress = _ref.onPress;\n  return theme === 'primary' ? buttonPrimary(label, onPress) : buttonDefault(label, onPress);\n}\nfunction buttonDefault(label, onPress) {\n  return _jsx(View, {\n    style: StyleSheet.buttonContainer,\n    children: _jsx(Pressable, {\n      style: StyleSheet.button,\n      onPress: onPress,\n      children: _jsx(Text, {\n        style: StyleSheet.buttonLabel,\n        children: label\n      })\n    })\n  });\n}\nfunction buttonPrimary(label, onPress) {\n  return _jsx(View, {\n    style: [styles.buttonContainer],\n    children: _jsx(Pressable, {\n      style: [styles.button],\n      onPress: onPress,\n      children: _jsx(Text, {\n        style: [styles.buttonLabel, {\n          color: AppColors.surface\n        }],\n        children: label\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    width: '100%',\n    height: 40,\n    marginHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    borderRadius: 5,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    backgroundColor: AppColors.primary\n  },\n  buttonIcon: {\n    paddingRight: 8\n  },\n  buttonLabel: {\n    color: AppColors.surface,\n    fontSize: 15,\n    fontWeight: '600'\n  }\n});","map":{"version":3,"names":["AppColors","jsx","_jsx","Button","_ref","label","theme","onPress","buttonPrimary","buttonDefault","View","style","StyleSheet","buttonContainer","children","Pressable","button","Text","buttonLabel","styles","color","surface","create","width","height","marginHorizontal","alignItems","justifyContent","borderRadius","flexDirection","backgroundColor","primary","buttonIcon","paddingRight","fontSize","fontWeight"],"sources":["/Users/sgreene/src/cs1/components/Button.js"],"sourcesContent":["import { StyleSheet, View, Pressable, Text } from 'react-native';\nimport AppColors from '../styles/AppColors';\n\nexport default function Button({ label, theme, onPress }) {\n    return (\n        theme === 'primary' ? buttonPrimary(label, onPress) : buttonDefault(label, onPress)\n    );\n}\n\nfunction buttonDefault(label, onPress) {\n    return (\n        <View style={StyleSheet.buttonContainer}>\n            <Pressable \n                style={StyleSheet.button}\n                onPress={onPress}\n            >\n                <Text style={StyleSheet.buttonLabel}>{label}</Text>\n            </Pressable>\n        </View>\n    );\n}\n\nfunction buttonPrimary(label, onPress) {\n    return (\n        <View style={[styles.buttonContainer]}>\n            <Pressable\n                style={[styles.button]}\n                onPress={onPress}\n            >\n                <Text style={[styles.buttonLabel, { color: AppColors.surface }]}>{label}</Text>\n            </Pressable>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    buttonContainer: {\n        width: '100%',\n        height: 40,\n        marginHorizontal: 20,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    button: {\n        borderRadius: 5,\n        width: '100%',\n        height: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        backgroundColor: AppColors.primary,\n    },\n    buttonIcon: {\n        paddingRight: 8,\n    },\n    buttonLabel: {\n        color: AppColors.surface,\n        fontSize: 15,\n        fontWeight: '600',\n    }\n})"],"mappings":";;;;AACA,OAAOA,SAAS;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAE5C,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAA4B;EAAA,IAAzBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;EAClD,OACID,KAAK,KAAK,SAAS,GAAGE,aAAa,CAACH,KAAK,EAAEE,OAAO,CAAC,GAAGE,aAAa,CAACJ,KAAK,EAAEE,OAAO,CAAC;AAE3F;AAEA,SAASE,aAAaA,CAACJ,KAAK,EAAEE,OAAO,EAAE;EACnC,OACIL,IAAA,CAACQ,IAAI;IAACC,KAAK,EAAEC,UAAU,CAACC,eAAgB;IAAAC,QAAA,EACpCZ,IAAA,CAACa,SAAS;MACNJ,KAAK,EAAEC,UAAU,CAACI,MAAO;MACzBT,OAAO,EAAEA,OAAQ;MAAAO,QAAA,EAEjBZ,IAAA,CAACe,IAAI;QAACN,KAAK,EAAEC,UAAU,CAACM,WAAY;QAAAJ,QAAA,EAAET;MAAK,CAAO;IAAC,CAC5C;EAAC,CACV,CAAC;AAEf;AAEA,SAASG,aAAaA,CAACH,KAAK,EAAEE,OAAO,EAAE;EACnC,OACIL,IAAA,CAACQ,IAAI;IAACC,KAAK,EAAE,CAACQ,MAAM,CAACN,eAAe,CAAE;IAAAC,QAAA,EAClCZ,IAAA,CAACa,SAAS;MACNJ,KAAK,EAAE,CAACQ,MAAM,CAACH,MAAM,CAAE;MACvBT,OAAO,EAAEA,OAAQ;MAAAO,QAAA,EAEjBZ,IAAA,CAACe,IAAI;QAACN,KAAK,EAAE,CAACQ,MAAM,CAACD,WAAW,EAAE;UAAEE,KAAK,EAAEpB,SAAS,CAACqB;QAAQ,CAAC,CAAE;QAAAP,QAAA,EAAET;MAAK,CAAO;IAAC,CACxE;EAAC,CACV,CAAC;AAEf;AAEA,IAAMc,MAAM,GAAGP,UAAU,CAACU,MAAM,CAAC;EAC7BT,eAAe,EAAE;IACbU,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,EAAE;IACVC,gBAAgB,EAAE,EAAE;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDX,MAAM,EAAE;IACJY,YAAY,EAAE,CAAC;IACfL,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdE,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBE,aAAa,EAAE,KAAK;IACpBC,eAAe,EAAE9B,SAAS,CAAC+B;EAC/B,CAAC;EACDC,UAAU,EAAE;IACRC,YAAY,EAAE;EAClB,CAAC;EACDf,WAAW,EAAE;IACTE,KAAK,EAAEpB,SAAS,CAACqB,OAAO;IACxBa,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}