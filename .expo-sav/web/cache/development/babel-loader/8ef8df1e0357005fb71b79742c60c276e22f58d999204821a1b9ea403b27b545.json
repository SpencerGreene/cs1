{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AuthContext } from \"../components/AuthProvider\";\nimport Button from \"../components/Button\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Header() {\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo,\n    logout = _useContext.logout;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n  return _jsxs(View, {\n    style: styles.headerContainer,\n    children: [_jsxs(Text, {\n      children: [userInfo.firstName, \"! Your OS is \", Platform.OS, \" \"]\n    }), _jsx(Button, {\n      label: \"Log out\",\n      theme: \"primary\",\n      onPress: logout\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  headerContainer: {\n    minWidth: '100%',\n    height: 70,\n    paddingHorizontal: 20,\n    alignItems: 'left',\n    justifyContent: 'center',\n    backgroundColor: '#007800'\n  },\n  profileImage: {\n    width: 40,\n    height: 40,\n    borderRadius: 20\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalItem: {\n    padding: 20,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    width: '100%',\n    alignItems: 'center'\n  }\n});\nvar UserProfile = function UserProfile() {\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isModalVisible = _useState4[0],\n    setModalVisible = _useState4[1];\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n  var handleLogout = function handleLogout() {\n    toggleModal();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      onPress: toggleModal,\n      children: _jsx(Image, {\n        source: require('path_to_your_user_image'),\n        style: styles.profileImage\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: isModalVisible,\n      onRequestClose: toggleModal,\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.modalItem,\n          onPress: handleLogout,\n          children: _jsx(Text, {\n            children: \"Logout\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.modalItem,\n          onPress: toggleModal,\n          children: _jsx(Text, {\n            children: \"Cancel\"\n          })\n        })]\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","useContext","StyleSheet","View","Image","TouchableOpacity","Modal","Text","Platform","AuthContext","Button","jsxs","_jsxs","jsx","_jsx","Header","_useContext","userInfo","logout","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","toggleModal","style","styles","headerContainer","children","firstName","OS","label","theme","onPress","create","minWidth","height","paddingHorizontal","alignItems","justifyContent","backgroundColor","profileImage","width","borderRadius","modalContainer","flex","modalItem","padding","borderBottomWidth","borderBottomColor","UserProfile","_useState3","_useState4","handleLogout","container","source","require","animationType","transparent","visible","onRequestClose"],"sources":["/Users/sgreene/src/cs1/components/Header.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { StyleSheet, View, Image, TouchableOpacity, Modal, Text, Platform } from 'react-native';\n\nimport { AuthContext } from '../components/AuthProvider';\nimport Button from '../components/Button';\n\nexport default function Header() {\n    const { userInfo, logout } = useContext(AuthContext);\n    const [isModalVisible, setModalVisible] = useState(false);\n\n    const toggleModal = () => {\n        setModalVisible(!isModalVisible);\n    };\n\n\n    return (\n        <View style={styles.headerContainer}>\n            <Text>{userInfo.firstName}! Your OS is {Platform.OS} </Text>\n            <Button label=\"Log out\" theme=\"primary\" onPress={logout} />\n        </View>\n    );\n}\nconst styles = StyleSheet.create({\n    headerContainer: {\n        minWidth: '100%',\n        height: 70,\n        paddingHorizontal: 20,\n        alignItems: 'left',\n        justifyContent: 'center',\n        backgroundColor: '#007800',\n    //     position: 'absolute',\n    //     top: 10,\n    //     right: 10,\n    },\n    profileImage: {\n        width: 40,\n        height: 40,\n        borderRadius: 20,\n    },\n    modalContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    modalItem: {\n        padding: 20,\n        backgroundColor: '#fff',\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        width: '100%',\n        alignItems: 'center',\n    },\n});\n\n\n\n\n\nconst UserProfile = () => {\n    const [isModalVisible, setModalVisible] = useState(false);\n\n    const toggleModal = () => {\n        setModalVisible(!isModalVisible);\n    };\n\n    const handleLogout = () => {\n        // Handle logout logic\n        // For example, navigate to the logout screen or dispatch a logout action\n        // Don't forget to close the modal after logging out\n        toggleModal();\n    };\n\n    return (\n        <View style={styles.container}>\n            <TouchableOpacity onPress={toggleModal}>\n                <Image\n                    source={require('path_to_your_user_image')}\n                    style={styles.profileImage}\n                />\n            </TouchableOpacity>\n\n            <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={isModalVisible}\n                onRequestClose={toggleModal}\n            >\n                <View style={styles.modalContainer}>\n                    <TouchableOpacity style={styles.modalItem} onPress={handleLogout}>\n                        <Text>Logout</Text>\n                    </TouchableOpacity>\n\n                    {/* Add more items as needed */}\n\n                    <TouchableOpacity style={styles.modalItem} onPress={toggleModal}>\n                        <Text>Cancel</Text>\n                    </TouchableOpacity>\n                </View>\n            </Modal>\n        </View>\n    );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}