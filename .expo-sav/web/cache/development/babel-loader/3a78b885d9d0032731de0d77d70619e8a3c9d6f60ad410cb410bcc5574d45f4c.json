{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { useContext, useEffect } from 'react';\nimport Button from \"../components/Button\";\nimport BubbleApi from \"../api/BubbleApi\";\nimport Styles from \"../styles/Styles\";\nimport { LOCALKEYS } from \"../config\";\nimport { AuthContext } from \"../components/AuthProvider\";\nimport BlueAllianceApi from \"../api/BlueAllianceApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ScoutPage() {\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo,\n    logout = _useContext.logout,\n    appVariables = _useContext.appVariables,\n    setAppVariables = _useContext.setAppVariables,\n    eventMatches = _useContext.eventMatches,\n    setEventMatches = _useContext.setEventMatches,\n    colorDict = _useContext.colorDict,\n    setColorDict = _useContext.setColorDict,\n    lastChanged = _useContext.lastChanged,\n    setLastChanged = _useContext.setLastChanged;\n  useEffect(function () {\n    var populateLastChanged = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var apiLastChanged = yield BubbleApi.apiGetLastChanged();\n        setLastChanged(apiLastChanged);\n        console.log('last changed loaded from api', apiLastChanged);\n      });\n      return function populateLastChanged() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    populateLastChanged();\n  }, []);\n  useEffect(function () {\n    var populateAppVariables = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        if (appVariables && userInfo && appVariables.teamNumT === userInfo.teamNumT) {\n          console.log('app Variables already in memory', appVariables);\n          return;\n        }\n        var storedAppVariables = yield AsyncStorage.getItem(LOCALKEYS.APPVAR);\n        if (storedAppVariables) {\n          var parsedAppVariables = JSON.parse(storedAppVariables);\n          parsedAppVariables.fetchedDate = new Date(parsedAppVariables.fetchedDate);\n          setAppVariables(parsedAppVariables);\n          var fetchedDate = parsedAppVariables.fetchedDate;\n          console.log('app variables found in cache', parsedAppVariables);\n          if (lastChanged) console.log('lastchanged appVariables is', typeof lastChanged.appVariables);\n        } else {\n          var apiAppVariables = yield BubbleApi.apiGetAppVariables();\n          setAppVariables(apiAppVariables);\n          yield AsyncStorage.setItem('appVariables', JSON.stringify(apiAppVariables));\n          console.log('app variables loaded from api', appVariables);\n        }\n      });\n      return function populateAppVariables() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    populateAppVariables();\n  }, [lastChanged]);\n  useEffect(function () {\n    var populateMatches = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        if (!appVariables || !appVariables.eventKey) return;\n        if (eventMatches && eventMatches.eventKey === appVariables.eventKey) {\n          console.log('eventMatches already loaded', eventMatches);\n          return;\n        }\n        var storedEventMatches = yield AsyncStorage.getItem('eventMatches');\n        if (storedEventMatches) {\n          var parsedEventMatches = JSON.parse(storedEventMatches);\n          if (parsedEventMatches.eventKey === appVariables.eventKey) {\n            setEventMatches(parsedEventMatches);\n            console.log('event matches found in cache', parsedEventMatches);\n            return;\n          }\n        }\n        var apiEventMatches = yield BlueAllianceApi.fetchMatches(appVariables.eventKey);\n        setEventMatches(apiEventMatches);\n        yield AsyncStorage.setItem('eventMatches', JSON.stringify(apiEventMatches));\n        console.log('event matches loaded from api');\n      });\n      return function populateMatches() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    populateMatches();\n  }, [appVariables]);\n  useEffect(function () {\n    var populateColorDict = function () {\n      var _ref4 = _asyncToGenerator(function* () {\n        if (!userInfo) return;\n        var storedColorDict = yield AsyncStorage.getItem('colorDict');\n        if (storedColorDict) {\n          var parsedColorDict = JSON.parse(storedColorDict);\n          if (parsedColorDict.teamNumT === userInfo.teamNumT) {\n            setColorDict(parsedColorDict);\n            console.log('color dict found in cache', parsedColorDict);\n            return;\n          }\n        }\n        var apiColorDict = yield BubbleApi.apiGetColorDict(userInfo.teamNumT);\n        setColorDict(apiColorDict);\n        yield AsyncStorage.setItem('colorDict', JSON.stringify(apiColorDict));\n        console.log('color dict loaded from api');\n      });\n      return function populateColorDict() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    populateColorDict();\n  }, [userInfo]);\n  return _jsxs(View, {\n    style: Styles.column30,\n    children: [_jsx(Image, {\n      style: styles.image,\n      source: require(\"../assets/loginlogo.jpg\")\n    }), _jsx(View, {\n      id: \"textBlock\",\n      children: _jsxs(View, {\n        style: Styles.groupLeft,\n        children: [_jsxs(Text, {\n          style: [Styles.mediumTitle, styles.loginTitle],\n          children: [\"Welcome \", userInfo.name]\n        }), _jsxs(Text, {\n          style: [Styles.bodyText],\n          children: [\"Event: \", appVariables.eventKey]\n        }), _jsx(Button, {\n          label: \"Log out\",\n          theme: \"primary\",\n          onPress: logout\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  bottomNotes: {\n    marginTop: 60,\n    marginBottom: 100\n  },\n  loginTitle: {\n    marginTop: 30,\n    marginBottom: 12\n  },\n  image: {\n    width: 192,\n    height: 51.5,\n    alignSelf: 'center',\n    marginBottom: 30,\n    marginTop: 100\n  }\n});","map":{"version":3,"names":["AsyncStorage","React","useContext","useEffect","Button","BubbleApi","Styles","LOCALKEYS","AuthContext","BlueAllianceApi","jsx","_jsx","jsxs","_jsxs","ScoutPage","_useContext","userInfo","logout","appVariables","setAppVariables","eventMatches","setEventMatches","colorDict","setColorDict","lastChanged","setLastChanged","populateLastChanged","_ref","_asyncToGenerator","apiLastChanged","apiGetLastChanged","console","log","apply","arguments","populateAppVariables","_ref2","teamNumT","storedAppVariables","getItem","APPVAR","parsedAppVariables","JSON","parse","fetchedDate","Date","apiAppVariables","apiGetAppVariables","setItem","stringify","populateMatches","_ref3","eventKey","storedEventMatches","parsedEventMatches","apiEventMatches","fetchMatches","populateColorDict","_ref4","storedColorDict","parsedColorDict","apiColorDict","apiGetColorDict","View","style","column30","children","Image","styles","image","source","require","id","groupLeft","Text","mediumTitle","loginTitle","name","bodyText","label","theme","onPress","StyleSheet","create","bottomNotes","marginTop","marginBottom","width","height","alignSelf"],"sources":["/Users/sgreene/src/cs1/pages/ScoutPage.js"],"sourcesContent":["import { StyleSheet, Text, View, TextInput, Image } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport React, { useContext, useEffect } from 'react';\nimport Button from '../components/Button';\nimport BubbleApi from '../api/BubbleApi';\n\nimport Styles from '../styles/Styles';\nimport { LOCALKEYS } from '../config';\nimport { AuthContext } from '../components/AuthProvider';\nimport BlueAllianceApi from '../api/BlueAllianceApi';\n\nexport default function ScoutPage() {\n    const {\n        userInfo, logout,\n        appVariables, setAppVariables,\n        eventMatches, setEventMatches,\n        colorDict, setColorDict,\n        lastChanged, setLastChanged,\n    } = useContext(AuthContext);\n\n    // get lastChanged\n    useEffect(() => {\n        const populateLastChanged = async () => {\n            const apiLastChanged = await BubbleApi.apiGetLastChanged();\n            setLastChanged(apiLastChanged);\n\n            console.log('last changed loaded from api', apiLastChanged);\n        };\n\n        populateLastChanged();\n    }, []); // Empty dependency array to run only on mount\n\n    // get appVariables from cache or api\n    useEffect(() => {\n        const populateAppVariables = async () => {\n            if (appVariables && userInfo && appVariables.teamNumT === userInfo.teamNumT ) {\n                console.log('app Variables already in memory', appVariables);\n                return;\n            }\n            // Check if appVariables is in AsyncStorage\n            const storedAppVariables = await AsyncStorage.getItem(LOCALKEYS.APPVAR);\n\n            if (storedAppVariables) {\n                // If it exists, set it in the state\n                const parsedAppVariables = JSON.parse(storedAppVariables);\n                parsedAppVariables.fetchedDate = new Date(parsedAppVariables.fetchedDate);\n                setAppVariables(parsedAppVariables);\n                const { fetchedDate } = parsedAppVariables;\n                console.log('app variables found in cache', parsedAppVariables);\n                if (lastChanged) console.log('lastchanged appVariables is', typeof lastChanged.appVariables);\n            } else {\n                // If not, fetch it from the API\n                const apiAppVariables = await BubbleApi.apiGetAppVariables();\n                setAppVariables(apiAppVariables);\n\n                // Store it in AsyncStorage for future use\n                await AsyncStorage.setItem('appVariables', JSON.stringify(apiAppVariables));\n                console.log('app variables loaded from api', appVariables);\n            }\n        };\n\n        populateAppVariables();\n    }, [lastChanged]); // Empty dependency array to run only on mount\n\n    // get eventMatches from cache or API - depends on appVariables\n    useEffect(() => {\n        const populateMatches = async () => {\n            if (!appVariables || !appVariables.eventKey) return;\n            if (eventMatches && eventMatches.eventKey === appVariables.eventKey) {\n                console.log('eventMatches already loaded', eventMatches);\n                return;\n            }\n\n            const storedEventMatches = await AsyncStorage.getItem('eventMatches');\n            if (storedEventMatches) {\n                // If it exists, set it in the state\n                const parsedEventMatches = JSON.parse(storedEventMatches);\n                if (parsedEventMatches.eventKey === appVariables.eventKey) {\n                    setEventMatches(parsedEventMatches);\n                    console.log('event matches found in cache', parsedEventMatches);\n                    return;\n                }\n                // if the event key mismatches, then ignore the cache\n            }\n\n            // If not, fetch it from the API\n            const apiEventMatches = await BlueAllianceApi.fetchMatches(appVariables.eventKey);\n            setEventMatches(apiEventMatches);\n\n            // Store it in AsyncStorage for future use\n            await AsyncStorage.setItem('eventMatches', JSON.stringify(apiEventMatches));\n            console.log('event matches loaded from api');\n        };\n\n        populateMatches();\n    }, [appVariables]); // Trigger only when appVariables changes\n\n    // get colorDict from cache or API - depends on userInfo\n    useEffect(() => {\n        const populateColorDict = async () => {\n            if (!userInfo) return;\n\n            const storedColorDict = await AsyncStorage.getItem('colorDict');\n            if (storedColorDict) {\n                // If it exists, set it in the state\n                const parsedColorDict = JSON.parse(storedColorDict);\n\n                if (parsedColorDict.teamNumT === userInfo.teamNumT) {\n                    setColorDict(parsedColorDict);\n                    console.log('color dict found in cache', parsedColorDict);\n                    return;\n                }\n            }\n\n            // If not, fetch it from the API\n            const apiColorDict = await BubbleApi.apiGetColorDict(userInfo.teamNumT);\n            setColorDict(apiColorDict);\n\n            // Store it in AsyncStorage for future use\n            await AsyncStorage.setItem('colorDict', JSON.stringify(apiColorDict));\n            console.log('color dict loaded from api');\n\n        };\n\n        populateColorDict();\n    }, [userInfo]); // Trigger only when appVariables changes\n\n    return (\n        <View style={Styles.column30}>\n            <Image style={styles.image} source={require(\"../assets/loginlogo.jpg\")} />\n            <View id=\"textBlock\">\n                <View style={Styles.groupLeft}>\n                <Text style={[Styles.mediumTitle, styles.loginTitle]}>Welcome {userInfo.name}</Text>\n                <Text style={[Styles.bodyText]}>Event: {appVariables.eventKey}</Text>\n                    <Button label=\"Log out\" theme=\"primary\" onPress={logout} />\n                </View>\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    bottomNotes: {\n        marginTop: 60,\n        marginBottom: 100,\n    },\n    loginTitle: {\n        marginTop: 30,\n        marginBottom: 12,\n    },\n    image: {\n        width: 192,\n        height: 51.5,\n        alignSelf: 'center',\n        marginBottom: 30,\n        marginTop: 100,\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}