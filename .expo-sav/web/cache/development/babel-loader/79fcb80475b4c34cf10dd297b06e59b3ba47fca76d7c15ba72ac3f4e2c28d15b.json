{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AppColors from \"../styles/AppColors\";\nimport { CLOCKSTATES } from \"../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CountdownTimer = React.forwardRef(function (_ref, ref) {\n  var initialTime = _ref.initialTime,\n    clockState = _ref.clockState,\n    startTimer = _ref.startTimer,\n    resetTimer = _ref.resetTimer;\n  var _useState = useState(initialTime),\n    _useState2 = _slicedToArray(_useState, 2),\n    time = _useState2[0],\n    setTime = _useState2[1];\n  var timerRef = useRef(null);\n  var handleStartTimer = function handleStartTimer() {\n    if (!timerRef.current) {\n      timerRef.current = setInterval(function () {\n        setTime(function (prevTime) {\n          if (prevTime > 0) {\n            return prevTime - 1;\n          } else {\n            clearInterval(timerRef.current);\n            return 0;\n          }\n        });\n      }, 1000);\n    }\n  };\n  var handleResetTimer = function handleResetTimer() {\n    console.log('resetTimer triggered');\n    clearInterval(timerRef.current);\n    setTime(initialTime);\n    resetTimer && resetTimer();\n  };\n  useEffect(function () {\n    return function () {\n      return clearInterval(timerRef.current);\n    };\n  }, []);\n  useEffect(function () {\n    console.log('set ref triggered');\n    ref.current = {\n      startTimer: handleStartTimer,\n      resetTimer: handleResetTimer\n    };\n  }, []);\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n  return _jsx(View, {\n    children: clockState !== CLOCKSTATES.hidden && _jsx(Text, {\n      style: styles.clockLabel,\n      children: `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`\n    })\n  });\n});\nexport default CountdownTimer;\nvar styles = StyleSheet.create({\n  clockLabel: {\n    fontSize: 19,\n    color: AppColors.bodyText,\n    fontWeight: '500',\n    alignSelf: 'flex-end'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useRef","Text","View","StyleSheet","AppColors","CLOCKSTATES","jsx","_jsx","CountdownTimer","forwardRef","_ref","ref","initialTime","clockState","startTimer","resetTimer","_useState","_useState2","_slicedToArray","time","setTime","timerRef","handleStartTimer","current","setInterval","prevTime","clearInterval","handleResetTimer","console","log","minutes","Math","floor","seconds","children","hidden","style","styles","clockLabel","create","fontSize","color","bodyText","fontWeight","alignSelf"],"sources":["/Users/sgreene/src/cs1/components/CountdownTimer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport AppColors from '../styles/AppColors';\nimport { CLOCKSTATES } from '../config';\n\nconst CountdownTimer = React.forwardRef(({ initialTime, clockState, startTimer, resetTimer }, ref) => {\n    const [time, setTime] = useState(initialTime);\n    const timerRef = useRef(null);\n\n    const handleStartTimer = () => {\n        if (!timerRef.current) {\n            timerRef.current = setInterval(() => {\n                setTime((prevTime) => {\n                    if (prevTime > 0) {\n                        return prevTime - 1;\n                    } else {\n                        clearInterval(timerRef.current);\n                        // Handle timer expiration, e.g., show a message or trigger an action\n                        return 0;\n                    }\n                });\n            }, 1000);\n        }\n    };\n\n    const handleResetTimer = () => {\n        console.log('resetTimer triggered');\n        clearInterval(timerRef.current);\n        setTime(initialTime);\n        resetTimer && resetTimer();\n    };\n\n    useEffect(() => {\n        return () => clearInterval(timerRef.current);\n    }, []);\n\n    // useEffect(() => {\n    //     console.log('onStart triggered');\n\n    //     onStart && onStart(startTimer);\n    // }, [onStart]);\n\n    useEffect(() => {\n        console.log('set ref triggered');\n\n        ref.current = {\n            startTimer: handleStartTimer,\n            resetTimer: handleResetTimer,\n        };\n    // }, [ref, handleStartTimer, handleResetTimer]);\n}, []);\n\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n\n    return (\n        <View>\n            {clockState !== CLOCKSTATES.hidden &&\n                <Text style={styles.clockLabel}>\n                    {`${minutes}:${seconds < 10 ? '0' : ''}${seconds}`}\n                </Text>\n            }\n        </View>\n    );\n});\n\nexport default CountdownTimer;\n\nconst styles = StyleSheet.create({\n    clockLabel: {\n        fontSize: 19,\n        color: AppColors.bodyText,\n        fontWeight: '500',\n        alignSelf: 'flex-end',\n    },\n});"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE3D,OAAOC,SAAS;AAChB,SAASC,WAAW;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAExC,IAAMC,cAAc,GAAGX,KAAK,CAACY,UAAU,CAAC,UAAAC,IAAA,EAAsDC,GAAG,EAAK;EAAA,IAA3DC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IAAEC,UAAU,GAAAH,IAAA,CAAVG,UAAU;IAAEC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IAAEC,UAAU,GAAAL,IAAA,CAAVK,UAAU;EACtF,IAAAC,SAAA,GAAwBlB,QAAQ,CAACc,WAAW,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAMI,QAAQ,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAE7B,IAAMsB,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC3B,IAAI,CAACD,QAAQ,CAACE,OAAO,EAAE;MACnBF,QAAQ,CAACE,OAAO,GAAGC,WAAW,CAAC,YAAM;QACjCJ,OAAO,CAAC,UAACK,QAAQ,EAAK;UAClB,IAAIA,QAAQ,GAAG,CAAC,EAAE;YACd,OAAOA,QAAQ,GAAG,CAAC;UACvB,CAAC,MAAM;YACHC,aAAa,CAACL,QAAQ,CAACE,OAAO,CAAC;YAE/B,OAAO,CAAC;UACZ;QACJ,CAAC,CAAC;MACN,CAAC,EAAE,IAAI,CAAC;IACZ;EACJ,CAAC;EAED,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC3BC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnCH,aAAa,CAACL,QAAQ,CAACE,OAAO,CAAC;IAC/BH,OAAO,CAACR,WAAW,CAAC;IACpBG,UAAU,IAAIA,UAAU,CAAC,CAAC;EAC9B,CAAC;EAEDhB,SAAS,CAAC,YAAM;IACZ,OAAO;MAAA,OAAM2B,aAAa,CAACL,QAAQ,CAACE,OAAO,CAAC;IAAA;EAChD,CAAC,EAAE,EAAE,CAAC;EAQNxB,SAAS,CAAC,YAAM;IACZ6B,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAEhClB,GAAG,CAACY,OAAO,GAAG;MACVT,UAAU,EAAEQ,gBAAgB;MAC5BP,UAAU,EAAEY;IAChB,CAAC;EAET,CAAC,EAAE,EAAE,CAAC;EAEF,IAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACb,IAAI,GAAG,EAAE,CAAC;EACrC,IAAMc,OAAO,GAAGd,IAAI,GAAG,EAAE;EAEzB,OACIZ,IAAA,CAACL,IAAI;IAAAgC,QAAA,EACArB,UAAU,KAAKR,WAAW,CAAC8B,MAAM,IAC9B5B,IAAA,CAACN,IAAI;MAACmC,KAAK,EAAEC,MAAM,CAACC,UAAW;MAAAJ,QAAA,EACzB,GAAEJ,OAAQ,IAAGG,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG,GAAEA,OAAQ;IAAC,CAChD;EAAC,CAET,CAAC;AAEf,CAAC,CAAC;AAEF,eAAezB,cAAc;AAE7B,IAAM6B,MAAM,GAAGlC,UAAU,CAACoC,MAAM,CAAC;EAC7BD,UAAU,EAAE;IACRE,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAErC,SAAS,CAACsC,QAAQ;IACzBC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE;EACf;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}