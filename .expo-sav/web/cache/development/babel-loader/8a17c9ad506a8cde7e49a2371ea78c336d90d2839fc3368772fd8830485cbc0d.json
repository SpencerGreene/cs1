{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppColors from \"../styles/AppColors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Button(_ref) {\n  var label = _ref.label,\n    theme = _ref.theme;\n  return theme === 'primary' ? buttonPrimary(label) : buttonDefault(label);\n}\nfunction buttonDefault(label) {\n  return _jsx(View, {\n    style: StyleSheet.buttonContainer,\n    children: _jsx(Pressable, {\n      style: StyleSheet.button,\n      onPress: function onPress() {\n        return alert('you pressed the button');\n      },\n      children: _jsx(Text, {\n        style: StyleSheet.buttonLabel,\n        children: label\n      })\n    })\n  });\n}\nfunction buttonPrimary(label) {\n  return _jsx(View, {\n    style: [styles.buttonContainer],\n    children: _jsx(Pressable, {\n      style: [styles.button],\n      onPress: function onPress() {\n        return alert('You pressed a button.');\n      },\n      children: _jsx(Text, {\n        style: [styles.buttonLabel, {\n          color: AppColors.surface\n        }],\n        children: label\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    width: '100%',\n    height: 40,\n    marginHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    borderRadius: 5,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    backgroundColor: AppColors.primary\n  },\n  buttonIcon: {\n    paddingRight: 8\n  },\n  buttonLabel: {\n    color: AppColors.surface,\n    fontSize: 15,\n    fontWeight: 600\n  }\n});","map":{"version":3,"names":["AppColors","jsx","_jsx","Button","_ref","label","theme","buttonPrimary","buttonDefault","View","style","StyleSheet","buttonContainer","children","Pressable","button","onPress","alert","Text","buttonLabel","styles","color","surface","create","width","height","marginHorizontal","alignItems","justifyContent","borderRadius","flexDirection","backgroundColor","primary","buttonIcon","paddingRight","fontSize","fontWeight"],"sources":["/Users/sgreene/src/cs1/components/Button.js"],"sourcesContent":["import { StyleSheet, View, Pressable, Text } from 'react-native';\nimport AppColors from '../styles/AppColors';\n\nexport default function Button({ label, theme }) {\n    return (\n        theme === 'primary' ? buttonPrimary(label) : buttonDefault(label)\n    );\n}\n\nfunction buttonDefault(label) {\n    return (\n        <View style={StyleSheet.buttonContainer}>\n            <Pressable \n                style={StyleSheet.button}\n                onPress={() => alert('you pressed the button')}\n            >\n                <Text style={StyleSheet.buttonLabel}>{label}</Text>\n            </Pressable>\n        </View>\n    );\n}\n\nfunction buttonPrimary(label) {\n    return (\n        <View style={[styles.buttonContainer]}>\n            <Pressable\n                style={[styles.button]}\n                onPress={() => alert('You pressed a button.')}\n            >\n                <Text style={[styles.buttonLabel, { color: AppColors.surface }]}>{label}</Text>\n            </Pressable>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    buttonContainer: {\n        width: '100%',\n        height: 40,\n        marginHorizontal: 20,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    button: {\n        borderRadius: 5,\n        width: '100%',\n        height: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        backgroundColor: AppColors.primary,\n    },\n    buttonIcon: {\n        paddingRight: 8,\n    },\n    buttonLabel: {\n        color: AppColors.surface,\n        fontSize: 15,\n        fontWeight: 600,\n    }\n})"],"mappings":";;;;AACA,OAAOA,SAAS;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAE5C,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAmB;EAAA,IAAhBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EACzC,OACIA,KAAK,KAAK,SAAS,GAAGC,aAAa,CAACF,KAAK,CAAC,GAAGG,aAAa,CAACH,KAAK,CAAC;AAEzE;AAEA,SAASG,aAAaA,CAACH,KAAK,EAAE;EAC1B,OACIH,IAAA,CAACO,IAAI;IAACC,KAAK,EAAEC,UAAU,CAACC,eAAgB;IAAAC,QAAA,EACpCX,IAAA,CAACY,SAAS;MACNJ,KAAK,EAAEC,UAAU,CAACI,MAAO;MACzBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,KAAK,CAAC,wBAAwB,CAAC;MAAA,CAAC;MAAAJ,QAAA,EAE/CX,IAAA,CAACgB,IAAI;QAACR,KAAK,EAAEC,UAAU,CAACQ,WAAY;QAAAN,QAAA,EAAER;MAAK,CAAO;IAAC,CAC5C;EAAC,CACV,CAAC;AAEf;AAEA,SAASE,aAAaA,CAACF,KAAK,EAAE;EAC1B,OACIH,IAAA,CAACO,IAAI;IAACC,KAAK,EAAE,CAACU,MAAM,CAACR,eAAe,CAAE;IAAAC,QAAA,EAClCX,IAAA,CAACY,SAAS;MACNJ,KAAK,EAAE,CAACU,MAAM,CAACL,MAAM,CAAE;MACvBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,KAAK,CAAC,uBAAuB,CAAC;MAAA,CAAC;MAAAJ,QAAA,EAE9CX,IAAA,CAACgB,IAAI;QAACR,KAAK,EAAE,CAACU,MAAM,CAACD,WAAW,EAAE;UAAEE,KAAK,EAAErB,SAAS,CAACsB;QAAQ,CAAC,CAAE;QAAAT,QAAA,EAAER;MAAK,CAAO;IAAC,CACxE;EAAC,CACV,CAAC;AAEf;AAEA,IAAMe,MAAM,GAAGT,UAAU,CAACY,MAAM,CAAC;EAC7BX,eAAe,EAAE;IACbY,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,EAAE;IACVC,gBAAgB,EAAE,EAAE;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDb,MAAM,EAAE;IACJc,YAAY,EAAE,CAAC;IACfL,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdE,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBE,aAAa,EAAE,KAAK;IACpBC,eAAe,EAAE/B,SAAS,CAACgC;EAC/B,CAAC;EACDC,UAAU,EAAE;IACRC,YAAY,EAAE;EAClB,CAAC;EACDf,WAAW,EAAE;IACTE,KAAK,EAAErB,SAAS,CAACsB,OAAO;IACxBa,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}