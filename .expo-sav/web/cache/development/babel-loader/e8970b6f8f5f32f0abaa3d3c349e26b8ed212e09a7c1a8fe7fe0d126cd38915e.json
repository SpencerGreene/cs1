{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { useContext, useEffect, useState } from 'react';\nimport BubbleApi from \"../api/BubbleApi\";\nimport Styles from \"../styles/Styles\";\nimport { ACTIONS, LOCALKEYS, PHASES, CLOCKSTATES } from \"../config\";\nimport { AuthContext } from \"../components/AuthProvider\";\nimport BlueAllianceApi from \"../api/BlueAllianceApi\";\nimport Header from \"../components/Header\";\nimport ScoutPageSelect from \"./ScoutPageSelect\";\nimport ScoutPageGame from \"./ScoutPageGame\";\nimport ButtonsFwdBack from \"../components/ButtonsFwdBack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ScoutPage() {\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo,\n    appVariables = _useContext.appVariables,\n    setAppVariables = _useContext.setAppVariables,\n    eventInfo = _useContext.eventInfo,\n    setEventInfo = _useContext.setEventInfo,\n    colorDict = _useContext.colorDict,\n    setColorDict = _useContext.setColorDict,\n    lastChanged = _useContext.lastChanged,\n    setLastChanged = _useContext.setLastChanged;\n  var _useState = useState({\n      phase: PHASES.select,\n      startTime: null,\n      clockState: CLOCKSTATES.hidden,\n      matchType: null,\n      matchNumber: null,\n      scoutTeamNumT: null,\n      allianceColor: null,\n      scoutSelectionValid: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    gameState = _useState2[0],\n    setGameState = _useState2[1];\n  var maxGameTime = function maxGameTime() {\n    var _appVariables$game;\n    return 150 + (appVariables == null ? void 0 : (_appVariables$game = appVariables.game) == null ? void 0 : _appVariables$game.autoTeleSeconds);\n  };\n  var doAction = function doAction(action) {\n    switch (action) {\n      case ACTIONS.clearConditions:\n        break;\n      case ACTIONS.clearMatchTeam:\n        break;\n      case ACTIONS.deleteCounts:\n        break;\n      case ACTIONS.deleteScout:\n        break;\n      case ACTIONS.incrementMatchNum:\n        var matchNumber = gameState.matchNumber + 1;\n        console.log('updating default to ', matchNumber);\n        AsyncStorage.setItem(LOCALKEYS.APPVAR, JSON.stringify(_objectSpread(_objectSpread({}, appVariables), {}, {\n          defaultMatchNum: matchNumber\n        })));\n        BubbleApi.apiSetDefaultMatchNumber(matchNumber);\n        console.log({\n          matchNumber: matchNumber\n        });\n        return {\n          matchNumber: matchNumber\n        };\n      case ACTIONS.makeScout:\n        break;\n      case ACTIONS.reloadMaxed:\n        break;\n      case ACTIONS.startClock:\n        return {\n          startTime: new Date(),\n          clockState: CLOCKSTATES.running\n        };\n      case ACTIONS.hideClock:\n        return {\n          clockState: CLOCKSTATES.hidden\n        };\n      case ACTIONS.resetClock:\n        return {\n          clockState: CLOCKSTATES.stopped\n        };\n      case ACTIONS.submit:\n        break;\n      default:\n        console.error('uknown action', action);\n    }\n    return {};\n  };\n  var setPhase = function setPhase(newPhase, actions) {\n    var phaseUpdate = {\n      phase: newPhase\n    };\n    var actionUpdates = actions ? actions.map(function (action) {\n      return doAction(action);\n    }) : [];\n    var updates = Object.assign.apply(Object, [phaseUpdate].concat(_toConsumableArray(actionUpdates)));\n    console.log({\n      actions: actions,\n      actionUpdates: actionUpdates,\n      updates: updates\n    });\n    setGameState(_objectSpread(_objectSpread({}, gameState), updates));\n  };\n  useEffect(function () {\n    var populateLastChanged = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var apiLastChanged = yield BubbleApi.apiGetLastChanged();\n        setLastChanged(apiLastChanged);\n        console.log('last changed loaded from api', apiLastChanged);\n      });\n      return function populateLastChanged() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    populateLastChanged();\n  }, []);\n  useEffect(function () {\n    var setStartingMatch = function setStartingMatch(appVar) {\n      setGameState(_objectSpread(_objectSpread({}, gameState), {}, {\n        matchType: appVar.defaultMatchType,\n        matchNumber: appVar.defaultMatchNum\n      }));\n    };\n    var populateAppVariables = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        if (appVariables && userInfo && appVariables.teamNumT === userInfo.teamNumT) {\n          console.log('app Variables already in memory', appVariables);\n          setStartingMatch(appVariables);\n          return;\n        }\n        var storedAppVariables = yield AsyncStorage.getItem(LOCALKEYS.APPVAR);\n        if (storedAppVariables) {\n          var parsedAppVariables = JSON.parse(storedAppVariables);\n          parsedAppVariables.fetchedDate = new Date(parsedAppVariables.fetchedDate);\n          setAppVariables(parsedAppVariables);\n          console.log('app variables found in cache', parsedAppVariables);\n          setStartingMatch(parsedAppVariables);\n        } else {\n          var apiAppVariables = yield BubbleApi.apiGetAppVariables();\n          yield setAppVariables(apiAppVariables);\n          yield AsyncStorage.setItem(LOCALKEYS.APPVAR, JSON.stringify(apiAppVariables));\n          console.log('app variables loaded from api', apiAppVariables);\n          setStartingMatch(apiAppVariables);\n        }\n      });\n      return function populateAppVariables() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    populateAppVariables();\n  }, []);\n  var loadEventInfoApi = function () {\n    var _ref3 = _asyncToGenerator(function* (eventKey) {\n      var apiEventInfo = yield BlueAllianceApi.fetchEventInfo(eventKey);\n      setEventInfo(apiEventInfo);\n      yield AsyncStorage.setItem(LOCALKEYS.EVENT, JSON.stringify(apiEventInfo));\n      console.log('eventInfo loaded from api', apiEventInfo);\n    });\n    return function loadEventInfoApi(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var validEvent = function validEvent(event) {\n      return event && event.eventKey === appVariables.eventKey && event.matches && event.matches[1] && event.matches[1].alliances;\n    };\n    var populateEvent = function () {\n      var _ref4 = _asyncToGenerator(function* () {\n        if (!appVariables || !appVariables.eventKey) return;\n        if (validEvent(eventInfo)) {\n          console.log('eventInfo already in memory', eventInfo);\n          return;\n        }\n        var parsedEventInfo = JSON.parse(yield AsyncStorage.getItem(LOCALKEYS.EVENT));\n        if (validEvent(parsedEventInfo)) {\n          setEventInfo(parsedEventInfo);\n          console.log('eventInfo found in cache', parsedEventInfo);\n          return;\n        }\n        yield loadEventInfoApi(appVariables.eventKey);\n      });\n      return function populateEvent() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    populateEvent();\n  }, [appVariables.eventKey]);\n  useEffect(function () {\n    var populateColorDict = function () {\n      var _ref5 = _asyncToGenerator(function* () {\n        if (!userInfo || !userInfo.teamNumT) return;\n        var storedColorDict = yield AsyncStorage.getItem(LOCALKEYS.COLORDICT);\n        if (storedColorDict) {\n          var parsedColorDict = JSON.parse(storedColorDict);\n          if (parsedColorDict.teamNumT === userInfo.teamNumT) {\n            setColorDict(parsedColorDict);\n            console.log('color dict found in cache', parsedColorDict);\n            return;\n          }\n        }\n        var apiColorDict = yield BubbleApi.apiGetColorDict(userInfo.teamNumT);\n        setColorDict(apiColorDict);\n        yield AsyncStorage.setItem(LOCALKEYS.COLORDICT, JSON.stringify(apiColorDict));\n        console.log('color dict loaded from api');\n      });\n      return function populateColorDict() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    populateColorDict();\n  }, [userInfo.teamNumT]);\n  return _jsxs(View, {\n    children: [_jsx(Header, {\n      gameState: gameState,\n      maxGameTime: maxGameTime()\n    }), _jsx(View, {\n      style: Styles.scoutContainer,\n      children: gameState.phase === PHASES.select ? _jsx(ScoutPageSelect, {\n        gameState: gameState,\n        setGameState: setGameState\n      }) : _jsx(ScoutPageGame, {\n        gameState: gameState,\n        setGameState: setGameState,\n        appVariables: appVariables\n      })\n    }), _jsx(ButtonsFwdBack, {\n      gameState: gameState,\n      setGameState: setGameState,\n      setPhase: setPhase\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  bottomNotes: {\n    marginTop: 60,\n    marginBottom: 100\n  },\n  loginTitle: {\n    marginTop: 30,\n    marginBottom: 12\n  },\n  image: {\n    width: 192,\n    height: 51.5,\n    alignSelf: 'center',\n    marginBottom: 30,\n    marginTop: 100\n  }\n});","map":{"version":3,"names":["AsyncStorage","React","useContext","useEffect","useState","BubbleApi","Styles","ACTIONS","LOCALKEYS","PHASES","CLOCKSTATES","AuthContext","BlueAllianceApi","Header","ScoutPageSelect","ScoutPageGame","ButtonsFwdBack","jsx","_jsx","jsxs","_jsxs","ScoutPage","_useContext","userInfo","appVariables","setAppVariables","eventInfo","setEventInfo","colorDict","setColorDict","lastChanged","setLastChanged","_useState","phase","select","startTime","clockState","hidden","matchType","matchNumber","scoutTeamNumT","allianceColor","scoutSelectionValid","_useState2","_slicedToArray","gameState","setGameState","maxGameTime","_appVariables$game","game","autoTeleSeconds","doAction","action","clearConditions","clearMatchTeam","deleteCounts","deleteScout","incrementMatchNum","console","log","setItem","APPVAR","JSON","stringify","_objectSpread","defaultMatchNum","apiSetDefaultMatchNumber","makeScout","reloadMaxed","startClock","Date","running","hideClock","resetClock","stopped","submit","error","setPhase","newPhase","actions","phaseUpdate","actionUpdates","map","updates","Object","assign","apply","concat","_toConsumableArray","populateLastChanged","_ref","_asyncToGenerator","apiLastChanged","apiGetLastChanged","arguments","setStartingMatch","appVar","defaultMatchType","populateAppVariables","_ref2","teamNumT","storedAppVariables","getItem","parsedAppVariables","parse","fetchedDate","apiAppVariables","apiGetAppVariables","loadEventInfoApi","_ref3","eventKey","apiEventInfo","fetchEventInfo","EVENT","_x","validEvent","event","matches","alliances","populateEvent","_ref4","parsedEventInfo","populateColorDict","_ref5","storedColorDict","COLORDICT","parsedColorDict","apiColorDict","apiGetColorDict","View","children","style","scoutContainer","styles","StyleSheet","create","bottomNotes","marginTop","marginBottom","loginTitle","image","width","height","alignSelf"],"sources":["/Users/sgreene/src/cs1/pages/ScoutPage.js"],"sourcesContent":["import { StyleSheet, View } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport BubbleApi from '../api/BubbleApi';\n\nimport Styles from '../styles/Styles';\nimport { ACTIONS, LOCALKEYS, PHASES, CLOCKSTATES } from '../config';\nimport { AuthContext } from '../components/AuthProvider';\nimport BlueAllianceApi from '../api/BlueAllianceApi';\nimport Header from '../components/Header';\nimport ScoutPageSelect from './ScoutPageSelect';\nimport ScoutPageGame from './ScoutPageGame';\nimport ButtonsFwdBack from '../components/ButtonsFwdBack';\n\nexport default function ScoutPage() {\n    const {\n        userInfo,\n        appVariables, setAppVariables,\n        eventInfo, setEventInfo,\n        colorDict, setColorDict,\n        lastChanged, setLastChanged,\n    } = useContext(AuthContext);\n\n    const [gameState, setGameState] = useState({\n        phase: PHASES.select,\n        startTime: null,\n        clockState: CLOCKSTATES.hidden,\n        matchType: null,\n        matchNumber: null,\n        scoutTeamNumT: null,\n        allianceColor: null,\n        scoutSelectionValid: null,\n    });\n\n    const maxGameTime = () => 150 + appVariables?.game?.autoTeleSeconds;\n\n    const doAction = action => {\n        switch(action) {\n            case ACTIONS.clearConditions:\n                break;\n            case ACTIONS.clearMatchTeam:\n                break;\n            case ACTIONS.deleteCounts:\n                break;\n            case ACTIONS.deleteScout:\n                break;\n            case ACTIONS.incrementMatchNum:\n                const matchNumber = gameState.matchNumber + 1;\n                console.log('updating default to ', matchNumber);\n                AsyncStorage.setItem(\n                    LOCALKEYS.APPVAR, \n                    JSON.stringify({...appVariables, defaultMatchNum: matchNumber})\n                );\n                BubbleApi.apiSetDefaultMatchNumber(matchNumber);\n                console.log({matchNumber});\n                return { matchNumber };\n            case ACTIONS.makeScout:\n                break;\n            case ACTIONS.reloadMaxed:\n                break;\n            case ACTIONS.startClock:\n                return { startTime: new Date(), clockState: CLOCKSTATES.running };\n            case ACTIONS.hideClock:\n                    return { clockState: CLOCKSTATES.hidden };\n            case ACTIONS.resetClock:\n                return { clockState: CLOCKSTATES.stopped };\n            case ACTIONS.submit:\n                break;\n            default:\n                console.error('uknown action', action);\n        }\n        return {};\n    }\n\n    const setPhase = (newPhase, actions) => {\n        const phaseUpdate = { phase: newPhase };\n        const actionUpdates = actions ? actions.map(action => doAction(action)) : [];\n        const updates = Object.assign(phaseUpdate, ...actionUpdates);\n        console.log({actions, actionUpdates, updates});\n        setGameState({ ...gameState, ...updates });\n    };\n\n    // get lastChanged from api - TODO refresh other info if it's stale\n    useEffect(() => {\n        const populateLastChanged = async () => {\n            const apiLastChanged = await BubbleApi.apiGetLastChanged();\n            setLastChanged(apiLastChanged);\n\n            console.log('last changed loaded from api', apiLastChanged);\n        };\n\n        populateLastChanged();\n    }, []); // Empty dependency array to run only on mount\n\n    // get appVariables from cache or api\n    useEffect(() => {\n        const setStartingMatch = appVar => {\n            setGameState({...gameState, matchType: appVar.defaultMatchType, matchNumber: appVar.defaultMatchNum});\n        };\n\n        const populateAppVariables = async () => {\n            if (appVariables && userInfo && appVariables.teamNumT === userInfo.teamNumT) {\n                console.log('app Variables already in memory', appVariables);\n                setStartingMatch(appVariables);\n                return;\n            }\n            // Check if appVariables is in AsyncStorage\n            const storedAppVariables = await AsyncStorage.getItem(LOCALKEYS.APPVAR);\n\n            if (storedAppVariables) {\n                // If it exists, set it in the state\n                const parsedAppVariables = JSON.parse(storedAppVariables);\n                parsedAppVariables.fetchedDate = new Date(parsedAppVariables.fetchedDate);\n                setAppVariables(parsedAppVariables);\n                console.log('app variables found in cache', parsedAppVariables);\n                setStartingMatch(parsedAppVariables);\n            } else {\n                // If not, fetch it from the API\n                const apiAppVariables = await BubbleApi.apiGetAppVariables();\n                await setAppVariables(apiAppVariables);\n\n                // Store it in AsyncStorage for future use\n                await AsyncStorage.setItem(LOCALKEYS.APPVAR, JSON.stringify(apiAppVariables));\n                console.log('app variables loaded from api', apiAppVariables);\n                setStartingMatch(apiAppVariables);\n            }\n        };\n\n        populateAppVariables();\n    }, []); // Empty dependency array to run only on mount\n\n    const loadEventInfoApi = async eventKey => {\n        const apiEventInfo = await BlueAllianceApi.fetchEventInfo(eventKey);\n        setEventInfo(apiEventInfo);\n\n        // Store it in AsyncStorage for future use\n        await AsyncStorage.setItem(LOCALKEYS.EVENT, JSON.stringify(apiEventInfo));\n        console.log('eventInfo loaded from api', apiEventInfo);\n    };\n\n    // get eventInfo from cache or API - depends on eventKey\n    useEffect(() => {\n        const validEvent = event => (\n            event \n            && event.eventKey === appVariables.eventKey\n            && event.matches\n            && event.matches[1]\n            && event.matches[1].alliances\n        );\n\n        const populateEvent = async () => {\n            if (!appVariables || !appVariables.eventKey) return;\n\n            // 1 - already in React state\n            if (validEvent(eventInfo)) {\n                console.log('eventInfo already in memory', eventInfo);\n                return;\n            }\n\n            // 2 - already in cache\n            const parsedEventInfo = JSON.parse(await AsyncStorage.getItem(LOCALKEYS.EVENT));\n            if (validEvent(parsedEventInfo)) {\n                setEventInfo(parsedEventInfo);\n                console.log('eventInfo found in cache', parsedEventInfo);\n                return;\n            }\n\n            // not found in cache\n            await loadEventInfoApi(appVariables.eventKey);\n        };\n\n        populateEvent();\n    }, [appVariables.eventKey]); // Trigger only when event changes\n\n    // get colorDict from cache or API - depends on userInfo.teamNumT\n    useEffect(() => {\n        const populateColorDict = async () => {\n            if (!userInfo || !userInfo.teamNumT) return;\n\n            const storedColorDict = await AsyncStorage.getItem(LOCALKEYS.COLORDICT);\n            if (storedColorDict) {\n                // If it exists, set it in the state\n                const parsedColorDict = JSON.parse(storedColorDict);\n\n                if (parsedColorDict.teamNumT === userInfo.teamNumT) {\n                    setColorDict(parsedColorDict);\n                    console.log('color dict found in cache', parsedColorDict);\n                    return;\n                }\n            }\n\n            // If not, fetch it from the API\n            const apiColorDict = await BubbleApi.apiGetColorDict(userInfo.teamNumT);\n            setColorDict(apiColorDict);\n\n            // Store it in AsyncStorage for future use\n            await AsyncStorage.setItem(LOCALKEYS.COLORDICT, JSON.stringify(apiColorDict));\n            console.log('color dict loaded from api');\n\n        };\n\n        populateColorDict();\n    }, [userInfo.teamNumT]); // Trigger only when appVariables changes\n\n    return (\n        <View>\n            <Header gameState={gameState} maxGameTime={maxGameTime()}/>\n            <View style={Styles.scoutContainer}>\n                {gameState.phase === PHASES.select \n                    ? <ScoutPageSelect gameState={gameState} setGameState={setGameState} />\n                    : <ScoutPageGame   gameState={gameState} setGameState={setGameState} appVariables={appVariables} />\n                }\n            </View>\n            <ButtonsFwdBack gameState={gameState} setGameState={setGameState} setPhase={setPhase}/>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    bottomNotes: {\n        marginTop: 60,\n        marginBottom: 100,\n    },\n    loginTitle: {\n        marginTop: 30,\n        marginBottom: 12,\n    },\n    image: {\n        width: 192,\n        height: 51.5,\n        alignSelf: 'center',\n        marginBottom: 30,\n        marginTop: 100,\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}