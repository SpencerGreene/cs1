{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppColors from \"../styles/AppColors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Button(_ref) {\n  var _styles$theme, _styles$all$buttonLab;\n  var label = _ref.label,\n    theme = _ref.theme,\n    onPress = _ref.onPress;\n  return _jsx(View, {\n    style: styles.buttonContainer,\n    children: _jsx(Pressable, {\n      style: [styles.all.button, (_styles$theme = styles[theme]) == null ? void 0 : _styles$theme.button],\n      onPress: onPress,\n      children: _jsx(Text, {\n        style: [(_styles$all$buttonLab = styles.all.buttonLabel.styles[theme]) == null ? void 0 : _styles$all$buttonLab.buttonLabel],\n        children: label\n      })\n    })\n  });\n}\nvar stylesAll = StyleSheet.create({\n  buttonContainer: {\n    width: '100%',\n    height: 40,\n    marginHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    borderRadius: 5,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    backgroundColor: AppColors.primary\n  },\n  buttonIcon: {\n    paddingRight: 8\n  },\n  buttonLabel: {\n    fontSize: 15,\n    fontWeight: '600'\n  }\n});\nvar stylesForward = StyleSheet.create({\n  button: {\n    backgroundColor: AppColors.primary\n  },\n  buttonLabel: {\n    color: AppColors.surface\n  }\n});\nvar styleBack = StyleSheet.create({\n  button: {\n    backgroundColor: AppColors.background\n  },\n  buttonLabel: {\n    color: AppColors.textGray\n  }\n});\nvar styles = {\n  all: stylesAll,\n  forward: stylesForward,\n  back: stylesBack\n};","map":{"version":3,"names":["AppColors","jsx","_jsx","Button","_ref","_styles$theme","_styles$all$buttonLab","label","theme","onPress","View","style","styles","buttonContainer","children","Pressable","all","button","Text","buttonLabel","stylesAll","StyleSheet","create","width","height","marginHorizontal","alignItems","justifyContent","borderRadius","flexDirection","backgroundColor","primary","buttonIcon","paddingRight","fontSize","fontWeight","stylesForward","color","surface","styleBack","background","textGray","forward","back","stylesBack"],"sources":["/Users/sgreene/src/cs1/components/Button.js"],"sourcesContent":["import { StyleSheet, View, Pressable, Text } from 'react-native';\nimport AppColors from '../styles/AppColors';\n\nexport default function Button({ label, theme, onPress }) {\n    return (\n        <View style={styles.buttonContainer}>\n            <Pressable \n                style={[ styles.all.button, styles[theme]?.button ]}\n                onPress={onPress}\n            >\n                <Text style={[ styles.all.buttonLabel. styles[theme]?.buttonLabel] }>{label}</Text>\n            </Pressable>\n        </View>\n    );\n}\n\nconst stylesAll = StyleSheet.create({\n    buttonContainer: {\n        width: '100%',\n        height: 40,\n        marginHorizontal: 20,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    button: {\n        borderRadius: 5,\n        width: '100%',\n        height: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        backgroundColor: AppColors.primary,\n    },\n    buttonIcon: {\n        paddingRight: 8,\n    },\n    buttonLabel: {\n        fontSize: 15,\n        fontWeight: '600',\n    }\n});\n\nconst stylesForward = StyleSheet.create({\n    button: {\n        backgroundColor: AppColors.primary\n    },\n    buttonLabel: {\n        color: AppColors.surface,\n    }\n});\n\nconst styleBack = StyleSheet.create({\n    button: {\n        backgroundColor: AppColors.background,\n    },\n    buttonLabel: {\n        color: AppColors.textGray,\n    },\n});\n\nconst styles = {\n    all: stylesAll,\n    forward: stylesForward,\n    back: stylesBack,\n}"],"mappings":";;;;AACA,OAAOA,SAAS;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAE5C,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAA4B;EAAA,IAAAC,aAAA,EAAAC,qBAAA;EAAA,IAAzBC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,KAAK,GAAAJ,IAAA,CAALI,KAAK;IAAEC,OAAO,GAAAL,IAAA,CAAPK,OAAO;EAClD,OACIP,IAAA,CAACQ,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,eAAgB;IAAAC,QAAA,EAChCZ,IAAA,CAACa,SAAS;MACNJ,KAAK,EAAE,CAAEC,MAAM,CAACI,GAAG,CAACC,MAAM,GAAAZ,aAAA,GAAEO,MAAM,CAACJ,KAAK,CAAC,qBAAbH,aAAA,CAAeY,MAAM,CAAG;MACpDR,OAAO,EAAEA,OAAQ;MAAAK,QAAA,EAEjBZ,IAAA,CAACgB,IAAI;QAACP,KAAK,EAAE,EAAAL,qBAAA,GAAEM,MAAM,CAACI,GAAG,CAACG,WAAW,CAAEP,MAAM,CAACJ,KAAK,CAAC,qBAArCF,qBAAA,CAAuCa,WAAW,CAAG;QAAAL,QAAA,EAAEP;MAAK,CAAO;IAAC,CAC5E;EAAC,CACV,CAAC;AAEf;AAEA,IAAMa,SAAS,GAAGC,UAAU,CAACC,MAAM,CAAC;EAChCT,eAAe,EAAE;IACbU,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,EAAE;IACVC,gBAAgB,EAAE,EAAE;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDV,MAAM,EAAE;IACJW,YAAY,EAAE,CAAC;IACfL,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdE,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBE,aAAa,EAAE,KAAK;IACpBC,eAAe,EAAE9B,SAAS,CAAC+B;EAC/B,CAAC;EACDC,UAAU,EAAE;IACRC,YAAY,EAAE;EAClB,CAAC;EACDd,WAAW,EAAE;IACTe,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAEF,IAAMC,aAAa,GAAGf,UAAU,CAACC,MAAM,CAAC;EACpCL,MAAM,EAAE;IACJa,eAAe,EAAE9B,SAAS,CAAC+B;EAC/B,CAAC;EACDZ,WAAW,EAAE;IACTkB,KAAK,EAAErC,SAAS,CAACsC;EACrB;AACJ,CAAC,CAAC;AAEF,IAAMC,SAAS,GAAGlB,UAAU,CAACC,MAAM,CAAC;EAChCL,MAAM,EAAE;IACJa,eAAe,EAAE9B,SAAS,CAACwC;EAC/B,CAAC;EACDrB,WAAW,EAAE;IACTkB,KAAK,EAAErC,SAAS,CAACyC;EACrB;AACJ,CAAC,CAAC;AAEF,IAAM7B,MAAM,GAAG;EACXI,GAAG,EAAEI,SAAS;EACdsB,OAAO,EAAEN,aAAa;EACtBO,IAAI,EAAEC;AACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}