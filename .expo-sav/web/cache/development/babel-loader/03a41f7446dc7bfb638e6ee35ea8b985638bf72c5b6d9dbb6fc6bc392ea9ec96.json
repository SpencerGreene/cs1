{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport { NativeAppEventEmitter } from \"react-native-web/dist/index\";\nimport UUID from \"../utils/uuid\";\nvar RNFetchBlob = NativeModules.RNFetchBlob;\nvar emitter = DeviceEventEmitter;\nvar RNFetchBlobReadStream = function () {\n  function RNFetchBlobReadStream(path, encoding, bufferSize, tick) {\n    var _this = this;\n    _classCallCheck(this, RNFetchBlobReadStream);\n    this.tick = 10;\n    if (!path) throw Error('RNFetchBlob could not open file stream with empty `path`');\n    this.encoding = encoding || 'utf8';\n    this.bufferSize = bufferSize;\n    this.path = path;\n    this.closed = false;\n    this.tick = tick;\n    this._onData = function () {};\n    this._onEnd = function () {};\n    this._onError = function () {};\n    this.streamId = 'RNFBRS' + UUID();\n    var subscription = emitter.addListener(this.streamId, function (e) {\n      var event = e.event,\n        detail = e.detail;\n      if (_this._onData && event === 'data') {\n        _this._onData(detail);\n        return;\n      } else if (_this._onEnd && event === 'end') {\n        _this._onEnd(detail);\n      } else {\n        if (_this._onError) _this._onError(detail);else throw new Error(detail);\n      }\n      if (event === 'error' || event === 'end') {\n        subscription.remove();\n        _this.closed = true;\n      }\n    });\n  }\n  _createClass(RNFetchBlobReadStream, [{\n    key: \"open\",\n    value: function open() {\n      if (!this.closed) RNFetchBlob.readStream(this.path, this.encoding, this.bufferSize || 10240, this.tick || -1, this.streamId);else throw new Error('Stream closed');\n    }\n  }, {\n    key: \"onData\",\n    value: function onData(fn) {\n      this._onData = fn;\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(fn) {\n      this._onError = fn;\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(fn) {\n      this._onEnd = fn;\n    }\n  }]);\n  return RNFetchBlobReadStream;\n}();\nexport { RNFetchBlobReadStream as default };","map":{"version":3,"names":["NativeAppEventEmitter","UUID","RNFetchBlob","NativeModules","emitter","DeviceEventEmitter","RNFetchBlobReadStream","path","encoding","bufferSize","tick","_this","_classCallCheck","Error","closed","_onData","_onEnd","_onError","streamId","subscription","addListener","e","event","detail","remove","_createClass","key","value","open","readStream","onData","fn","onError","onEnd","default"],"sources":["/Users/sgreene/src/cs1/node_modules/react-native-fetch-blob/class/RNFetchBlobReadStream.js"],"sourcesContent":["// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport {\n  NativeModules,\n  DeviceEventEmitter,\n  NativeAppEventEmitter,\n} from 'react-native'\nimport UUID from '../utils/uuid'\n\nconst RNFetchBlob = NativeModules.RNFetchBlob\nconst emitter = DeviceEventEmitter\n\nexport default class RNFetchBlobReadStream {\n\n  path : string;\n  encoding : 'utf8' | 'ascii' | 'base64';\n  bufferSize : ?number;\n  closed : boolean;\n  tick : number = 10;\n\n  constructor(path:string, encoding:string, bufferSize?:?number, tick:number) {\n    if(!path)\n      throw Error('RNFetchBlob could not open file stream with empty `path`')\n    this.encoding = encoding || 'utf8'\n    this.bufferSize = bufferSize\n    this.path = path\n    this.closed = false\n    this.tick = tick\n    this._onData = () => {}\n    this._onEnd = () => {}\n    this._onError = () => {}\n    this.streamId = 'RNFBRS'+ UUID()\n\n    // register for file stream event\n    let subscription = emitter.addListener(this.streamId, (e) => {\n      let {event, detail} = e\n      if(this._onData && event === 'data') {\n        this._onData(detail)\n        return\n      }\n      else if (this._onEnd && event === 'end') {\n        this._onEnd(detail)\n      }\n      else {\n        if(this._onError)\n          this._onError(detail)\n        else\n          throw new Error(detail)\n      }\n      // when stream closed or error, remove event handler\n      if (event === 'error' || event === 'end') {\n        subscription.remove()\n        this.closed = true\n      }\n    })\n\n  }\n\n  open() {\n    if(!this.closed)\n      RNFetchBlob.readStream(this.path, this.encoding, this.bufferSize || 10240 , this.tick || -1, this.streamId)\n    else\n      throw new Error('Stream closed')\n  }\n\n  onData(fn:() => void) {\n    this._onData = fn\n  }\n\n  onError(fn) {\n    this._onError = fn\n  }\n\n  onEnd (fn) {\n    this._onEnd = fn\n  }\n\n}\n"],"mappings":";;;;SAOEA,qBAAqB;AAEvB,OAAOC,IAAI;AAEX,IAAMC,WAAW,GAAGC,aAAa,CAACD,WAAW;AAC7C,IAAME,OAAO,GAAGC,kBAAkB;AAAA,IAEbC,qBAAqB;EAQxC,SAAAA,sBAAYC,IAAW,EAAEC,QAAe,EAAEC,UAAmB,EAAEC,IAAW,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAN,qBAAA;IAAA,KAF5EI,IAAI,GAAY,EAAE;IAGhB,IAAG,CAACH,IAAI,EACN,MAAMM,KAAK,CAAC,0DAA0D,CAAC;IACzE,IAAI,CAACL,QAAQ,GAAGA,QAAQ,IAAI,MAAM;IAClC,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACO,MAAM,GAAG,KAAK;IACnB,IAAI,CAACJ,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACK,OAAO,GAAG,YAAM,CAAC,CAAC;IACvB,IAAI,CAACC,MAAM,GAAG,YAAM,CAAC,CAAC;IACtB,IAAI,CAACC,QAAQ,GAAG,YAAM,CAAC,CAAC;IACxB,IAAI,CAACC,QAAQ,GAAG,QAAQ,GAAEjB,IAAI,CAAC,CAAC;IAGhC,IAAIkB,YAAY,GAAGf,OAAO,CAACgB,WAAW,CAAC,IAAI,CAACF,QAAQ,EAAE,UAACG,CAAC,EAAK;MAC3D,IAAKC,KAAK,GAAYD,CAAC,CAAlBC,KAAK;QAAEC,MAAM,GAAIF,CAAC,CAAXE,MAAM;MAClB,IAAGZ,KAAI,CAACI,OAAO,IAAIO,KAAK,KAAK,MAAM,EAAE;QACnCX,KAAI,CAACI,OAAO,CAACQ,MAAM,CAAC;QACpB;MACF,CAAC,MACI,IAAIZ,KAAI,CAACK,MAAM,IAAIM,KAAK,KAAK,KAAK,EAAE;QACvCX,KAAI,CAACK,MAAM,CAACO,MAAM,CAAC;MACrB,CAAC,MACI;QACH,IAAGZ,KAAI,CAACM,QAAQ,EACdN,KAAI,CAACM,QAAQ,CAACM,MAAM,CAAC,MAErB,MAAM,IAAIV,KAAK,CAACU,MAAM,CAAC;MAC3B;MAEA,IAAID,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,KAAK,EAAE;QACxCH,YAAY,CAACK,MAAM,CAAC,CAAC;QACrBb,KAAI,CAACG,MAAM,GAAG,IAAI;MACpB;IACF,CAAC,CAAC;EAEJ;EAACW,YAAA,CAAAnB,qBAAA;IAAAoB,GAAA;IAAAC,KAAA,EAED,SAAAC,KAAA,EAAO;MACL,IAAG,CAAC,IAAI,CAACd,MAAM,EACbZ,WAAW,CAAC2B,UAAU,CAAC,IAAI,CAACtB,IAAI,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,UAAU,IAAI,KAAK,EAAG,IAAI,CAACC,IAAI,IAAI,CAAC,CAAC,EAAE,IAAI,CAACQ,QAAQ,CAAC,MAE3G,MAAM,IAAIL,KAAK,CAAC,eAAe,CAAC;IACpC;EAAC;IAAAa,GAAA;IAAAC,KAAA,EAED,SAAAG,OAAOC,EAAa,EAAE;MACpB,IAAI,CAAChB,OAAO,GAAGgB,EAAE;IACnB;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAK,QAAQD,EAAE,EAAE;MACV,IAAI,CAACd,QAAQ,GAAGc,EAAE;IACpB;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAM,MAAOF,EAAE,EAAE;MACT,IAAI,CAACf,MAAM,GAAGe,EAAE;IAClB;EAAC;EAAA,OAAAzB,qBAAA;AAAA;AAAA,SA/DkBA,qBAAqB,IAAA4B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}