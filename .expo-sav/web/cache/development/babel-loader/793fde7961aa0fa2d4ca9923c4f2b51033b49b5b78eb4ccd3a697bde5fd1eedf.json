{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AuthContext } from \"../components/AuthProvider\";\nimport Button from \"../components/Button\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Header() {\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo,\n    logout = _useContext.logout;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n  var handleLogout = function handleLogout() {\n    setModalVisible(false);\n    logout();\n  };\n  return _jsxs(View, {\n    style: styles.headerContainer,\n    children: [_jsxs(Text, {\n      children: [userInfo.firstName, \"! Your OS is \", Platform.OS, \" \"]\n    }), _jsx(TouchableOpacity, {\n      onPress: toggleModal,\n      children: _jsx(Image, {\n        source: require(\"../assets/icon.png\"),\n        style: styles.profileImage\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  headerContainer: {\n    minWidth: '100%',\n    height: 70,\n    paddingHorizontal: 20,\n    alignItems: 'left',\n    justifyContent: 'center',\n    backgroundColor: '#007800'\n  },\n  profileImage: {\n    width: 40,\n    height: 40,\n    borderRadius: 20\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalItem: {\n    padding: 20,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    width: '100%',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useContext","StyleSheet","View","Image","TouchableOpacity","Modal","Text","Platform","AuthContext","Button","jsxs","_jsxs","jsx","_jsx","Header","_useContext","userInfo","logout","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","toggleModal","handleLogout","style","styles","headerContainer","children","firstName","OS","onPress","source","require","profileImage","create","minWidth","height","paddingHorizontal","alignItems","justifyContent","backgroundColor","width","borderRadius","modalContainer","flex","modalItem","padding","borderBottomWidth","borderBottomColor"],"sources":["/Users/sgreene/src/cs1/components/Header.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { StyleSheet, View, Image, TouchableOpacity, Modal, Text, Platform } from 'react-native';\n\nimport { AuthContext } from '../components/AuthProvider';\nimport Button from '../components/Button';\n\nexport default function Header() {\n    const { userInfo, logout } = useContext(AuthContext);\n    const [isModalVisible, setModalVisible] = useState(false);\n\n    const toggleModal = () => { setModalVisible(!isModalVisible); };\n    const handleLogout = () => { setModalVisible(false); logout(); };\n\n    return (\n        <View style={styles.headerContainer}>\n            <Text>{userInfo.firstName}! Your OS is {Platform.OS} </Text>\n            <TouchableOpacity onPress={toggleModal}>\n                <Image\n                    source={require('../assets/icon.png')}\n                    style={styles.profileImage}\n                />\n            </TouchableOpacity>\n        </View>\n    );\n}\nconst styles = StyleSheet.create({\n    headerContainer: {\n        minWidth: '100%',\n        height: 70,\n        paddingHorizontal: 20,\n        alignItems: 'left',\n        justifyContent: 'center',\n        backgroundColor: '#007800',\n    //     position: 'absolute',\n    //     top: 10,\n    //     right: 10,\n    },\n    profileImage: {\n        width: 40,\n        height: 40,\n        borderRadius: 20,\n    },\n    modalContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    modalItem: {\n        padding: 20,\n        backgroundColor: '#fff',\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        width: '100%',\n        alignItems: 'center',\n    },\n});\n\n\n\n/*\n\nconst UserProfile = () => {\n\n    return (\n        <View style={styles.container}>\n            <TouchableOpacity onPress={toggleModal}>\n                <Image\n                    source={require('path_to_your_user_image')}\n                    style={styles.profileImage}\n                />\n            </TouchableOpacity>\n\n            <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={isModalVisible}\n                onRequestClose={toggleModal}\n            >\n                <View style={styles.modalContainer}>\n                    <TouchableOpacity style={styles.modalItem} onPress={handleLogout}>\n                        <Text>Logout</Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity style={styles.modalItem} onPress={toggleModal}>\n                        <Text>Cancel</Text>\n                    </TouchableOpacity>\n                </View>\n            </Modal>\n        </View>\n    );\n};\n\n*/"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAGpD,SAASC,WAAW;AACpB,OAAOC,MAAM;AAA6B,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE1C,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC7B,IAAAC,WAAA,GAA6Bf,UAAU,CAACQ,WAAW,CAAC;IAA5CQ,QAAQ,GAAAD,WAAA,CAARC,QAAQ;IAAEC,MAAM,GAAAF,WAAA,CAANE,MAAM;EACxB,IAAAC,SAAA,GAA0CnB,QAAQ,CAAC,KAAK,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,cAAc,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEtC,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAAED,eAAe,CAAC,CAACD,cAAc,CAAC;EAAE,CAAC;EAC/D,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IAAEF,eAAe,CAAC,KAAK,CAAC;IAAEL,MAAM,CAAC,CAAC;EAAE,CAAC;EAEhE,OACIN,KAAA,CAACT,IAAI;IAACuB,KAAK,EAAEC,MAAM,CAACC,eAAgB;IAAAC,QAAA,GAChCjB,KAAA,CAACL,IAAI;MAAAsB,QAAA,GAAEZ,QAAQ,CAACa,SAAS,EAAC,eAAa,EAACtB,QAAQ,CAACuB,EAAE,EAAC,GAAC;IAAA,CAAM,CAAC,EAC5DjB,IAAA,CAACT,gBAAgB;MAAC2B,OAAO,EAAER,WAAY;MAAAK,QAAA,EACnCf,IAAA,CAACV,KAAK;QACF6B,MAAM,EAAEC,OAAO,qBAAqB,CAAE;QACtCR,KAAK,EAAEC,MAAM,CAACQ;MAAa,CAC9B;IAAC,CACY,CAAC;EAAA,CACjB,CAAC;AAEf;AACA,IAAMR,MAAM,GAAGzB,UAAU,CAACkC,MAAM,CAAC;EAC7BR,eAAe,EAAE;IACbS,QAAQ,EAAE,MAAM;IAChBC,MAAM,EAAE,EAAE;IACVC,iBAAiB,EAAE,EAAE;IACrBC,UAAU,EAAE,MAAM;IAClBC,cAAc,EAAE,QAAQ;IACxBC,eAAe,EAAE;EAIrB,CAAC;EACDP,YAAY,EAAE;IACVQ,KAAK,EAAE,EAAE;IACTL,MAAM,EAAE,EAAE;IACVM,YAAY,EAAE;EAClB,CAAC;EACDC,cAAc,EAAE;IACZC,IAAI,EAAE,CAAC;IACPL,cAAc,EAAE,QAAQ;IACxBD,UAAU,EAAE,QAAQ;IACpBE,eAAe,EAAE;EACrB,CAAC;EACDK,SAAS,EAAE;IACPC,OAAO,EAAE,EAAE;IACXN,eAAe,EAAE,MAAM;IACvBO,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,MAAM;IACzBP,KAAK,EAAE,MAAM;IACbH,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}