{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { AuthContext } from \"../components/AuthProvider\";\nimport Styles from \"../styles/Styles\";\nimport { CLOCKSTATES, PHASES } from \"../config\";\nimport AppColors from \"../styles/AppColors\";\nimport CountdownTimer from \"./CountdownTimer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Header(_ref) {\n  var gameState = _ref.gameState,\n    maxGameTime = _ref.maxGameTime,\n    startTimer = _ref.startTimer,\n    resetTimer = _ref.resetTimer,\n    countdownTimerRef = _ref.countdownTimerRef;\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo,\n    logout = _useContext.logout;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n  var handleLogout = function handleLogout() {\n    setModalVisible(false);\n    logout();\n  };\n  var handleBackgroundPress = function handleBackgroundPress() {\n    if (isModalVisible) toggleModal();\n  };\n  var getInitials = function getInitials() {\n    var firstName = userInfo.firstName,\n      lastName = userInfo.lastName;\n    if (firstName && lastName) {\n      return `${firstName.charAt(0)}${lastName.charAt(0)}`;\n    } else if (firstName) {\n      return firstName.charAt(0);\n    } else if (lastName) {\n      return lastName.charAt(0);\n    }\n    return '';\n  };\n  var renderProfileContent = function renderProfileContent() {\n    var profileImage = userInfo.profileImage;\n    if (profileImage) {\n      return _jsx(Image, {\n        source: {\n          uri: profileImage\n        },\n        style: styles.profileImage\n      });\n    } else {\n      var initials = getInitials();\n      return _jsx(View, {\n        style: styles.initialsContainer,\n        children: _jsx(Text, {\n          style: styles.initialsText,\n          children: initials\n        })\n      });\n    }\n  };\n  var profileButton = _jsx(Pressable, {\n    onPress: toggleModal,\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return [styles.profileContainer, pressed && styles.pressed];\n    },\n    children: renderProfileContent()\n  });\n  var profileMenu = _jsx(Modal, {\n    animationType: \"none\",\n    transparent: true,\n    visible: isModalVisible,\n    onRequestClose: toggleModal,\n    children: _jsx(Pressable, {\n      onPress: handleBackgroundPress,\n      style: styles.modalContainer,\n      children: _jsx(View, {\n        style: Styles.dropdownContent,\n        children: _jsx(Pressable, {\n          style: Styles.dropdownItem,\n          onPress: handleLogout,\n          children: _jsx(Text, {\n            children: \"Logout\"\n          })\n        })\n      })\n    })\n  });\n  var headerSelect = _jsxs(View, {\n    style: styles.headerContainer,\n    children: [_jsx(View, {\n      style: styles.phaseContainer,\n      children: _jsx(Image, {\n        style: styles.logoImage,\n        source: require(\"../assets/loginlogo.jpg\")\n      })\n    }), profileButton, profileMenu]\n  });\n  var headerGame = _jsxs(View, {\n    style: styles.headerContainer,\n    children: [_jsx(View, {\n      style: styles.phaseContainer,\n      children: _jsx(Text, {\n        style: styles.phaseTitle,\n        children: gameState.phase.display\n      })\n    }), _jsx(View, {\n      style: styles.teamContainer,\n      children: _jsx(Text, {\n        style: [styles.teamLabel, styles.alliance[gameState.allianceColor]],\n        children: gameState.scoutTeamNumT\n      })\n    }), _jsx(View, {\n      style: styles.phaseContainer,\n      children: _jsx(CountdownTimer, {\n        initialTime: maxGameTime,\n        ref: countdownTimerRef,\n        startTimer: startTimer,\n        resetTimer: resetTimer,\n        clockState: gameState.clockState\n      })\n    })]\n  });\n  console.log(gameState);\n  return gameState.phase === PHASES.select ? headerSelect : headerGame;\n}\nvar styles = StyleSheet.create({\n  headerContainer: {\n    minWidth: '100%',\n    height: 70,\n    paddingHorizontal: 20,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  phaseContainer: {\n    flex: 6,\n    minHeight: 40,\n    alignSelf: 'center',\n    justifyContent: 'center'\n  },\n  teamContainer: {\n    maxHeight: 45,\n    minWidth: 80,\n    alignSelf: 'center',\n    justifyContent: 'center'\n  },\n  profileContainer: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'flex-end'\n  },\n  logoImage: {\n    width: 150,\n    height: 40,\n    alignSelf: 'flex-start',\n    marginBottom: 0,\n    marginTop: 0\n  },\n  phaseTitle: {\n    fontSize: 19,\n    color: AppColors.text,\n    fontWeight: '700'\n  },\n  teamLabel: {\n    fontSize: 19,\n    color: AppColors.medGray,\n    fontWeight: '700',\n    backgroundColor: AppColors.lightGray,\n    borderRadius: 5,\n    alignSelf: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  alliance: {\n    blue: {\n      backgroundColor: AppColors.frcBlue\n    },\n    red: {\n      backgroundColor: AppColors.frcRed\n    }\n  },\n  clockLabel: {\n    fontSize: 19,\n    color: AppColors.bodyText,\n    fontWeight: '500',\n    alignSelf: 'flex-end'\n  },\n  profileImage: {\n    width: 30,\n    height: 30,\n    borderRadius: 20\n  },\n  pressed: {\n    opacity: 0.5\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'flex-end'\n  },\n  initialsContainer: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    backgroundColor: 'lightgray',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  initialsText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","useState","useContext","useRef","StyleSheet","View","Image","Text","Modal","Pressable","AuthContext","Styles","CLOCKSTATES","PHASES","AppColors","CountdownTimer","jsx","_jsx","jsxs","_jsxs","Header","_ref","gameState","maxGameTime","startTimer","resetTimer","countdownTimerRef","_useContext","userInfo","logout","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","toggleModal","handleLogout","handleBackgroundPress","getInitials","firstName","lastName","charAt","renderProfileContent","profileImage","source","uri","style","styles","initials","initialsContainer","children","initialsText","profileButton","onPress","_ref2","pressed","profileContainer","profileMenu","animationType","transparent","visible","onRequestClose","modalContainer","dropdownContent","dropdownItem","headerSelect","headerContainer","phaseContainer","logoImage","require","headerGame","phaseTitle","phase","display","teamContainer","teamLabel","alliance","allianceColor","scoutTeamNumT","initialTime","ref","clockState","console","log","select","create","minWidth","height","paddingHorizontal","alignItems","justifyContent","flexDirection","flex","minHeight","alignSelf","maxHeight","width","marginBottom","marginTop","fontSize","color","text","fontWeight","medGray","backgroundColor","lightGray","borderRadius","paddingVertical","blue","frcBlue","red","frcRed","clockLabel","bodyText","opacity"],"sources":["/Users/sgreene/src/cs1/components/Header.js"],"sourcesContent":["import React, { useState, useContext, useRef } from 'react';\nimport {\n    StyleSheet, View, Image, Text,\n    Modal, Pressable,\n} from 'react-native';\n\nimport { AuthContext } from '../components/AuthProvider';\nimport Styles from '../styles/Styles';\nimport { CLOCKSTATES, PHASES } from '../config';\nimport AppColors from '../styles/AppColors';\nimport CountdownTimer from './CountdownTimer';\n\nexport default function Header({ gameState, maxGameTime, startTimer, resetTimer, countdownTimerRef }) {\n    const { userInfo, logout } = useContext(AuthContext);\n    const [isModalVisible, setModalVisible] = useState(false);\n\n    const toggleModal = () => { setModalVisible(!isModalVisible); };\n    const handleLogout = () => { setModalVisible(false); logout(); };\n    const handleBackgroundPress = () => { if (isModalVisible) toggleModal(); }\n\n    const getInitials = () => {\n        const { firstName, lastName } = userInfo;\n        if (firstName && lastName) {\n            return `${firstName.charAt(0)}${lastName.charAt(0)}`;\n        } else if (firstName) {\n            return firstName.charAt(0);\n        } else if (lastName) {\n            return lastName.charAt(0);\n        }\n        return ''; // Return an empty string if no initials are available\n    };\n\n    const renderProfileContent = () => {\n        const { profileImage } = userInfo;\n\n        if (profileImage) {\n            return (\n                <Image\n                    source={{ uri: profileImage }}\n                    style={styles.profileImage}\n                />\n            );\n        } else {\n            const initials = getInitials();\n            return (\n                <View style={styles.initialsContainer}>\n                    <Text style={styles.initialsText}>{initials}</Text>\n                </View>\n            );\n        }\n    };\n\n    const profileButton = (\n        <Pressable onPress={toggleModal}\n            style={({ pressed }) => [styles.profileContainer, pressed && styles.pressed]}\n        >\n            {renderProfileContent()}\n        </Pressable>\n    );\n\n    const profileMenu = (\n        <Modal\n            animationType=\"none\"\n            transparent={true}\n            visible={isModalVisible}\n            onRequestClose={toggleModal}\n        >\n            <Pressable onPress={handleBackgroundPress} style={styles.modalContainer}>\n                <View style={Styles.dropdownContent}>\n                    <Pressable style={Styles.dropdownItem} onPress={handleLogout}>\n                        <Text>Logout</Text>\n                    </Pressable>\n                    {/* Add more items as needed */}\n                </View>\n            </Pressable>\n        </Modal>\n    );\n\n    const headerSelect = (\n        <View style={styles.headerContainer}>\n            <View style={styles.phaseContainer}>\n                <Image style={styles.logoImage} source={require('../assets/loginlogo.jpg')} />\n            </View>\n            {profileButton}\n            {profileMenu}\n        </View>\n    );\n\n    const headerGame = (\n        <View style={styles.headerContainer}>\n            <View style={styles.phaseContainer}>\n                <Text style={styles.phaseTitle}>\n                    {gameState.phase.display}\n                </Text>\n            </View>\n            <View style={styles.teamContainer}>\n                <Text style={[styles.teamLabel, styles.alliance[gameState.allianceColor]]}>\n                    {gameState.scoutTeamNumT}\n                </Text>\n            </View>\n            <View style={styles.phaseContainer}>\n                <CountdownTimer\n                    initialTime={maxGameTime}\n                    ref={countdownTimerRef}\n                    startTimer={startTimer} resetTimer={resetTimer}\n                    clockState={gameState.clockState}\n                />\n            </View>\n        </View>\n    );\n\n    console.log(gameState);\n    return gameState.phase === PHASES.select ? headerSelect : headerGame;\n}\n\nconst styles = StyleSheet.create({\n    // layout\n    headerContainer: {\n        minWidth: '100%',\n        height: 70,\n        paddingHorizontal: 20,\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        // backgroundColor: AppColors.ltGreen,\n    },\n    phaseContainer: {\n        flex: 6,\n        minHeight: 40,\n        alignSelf: 'center',\n        justifyContent: 'center',\n        // backgroundColor: AppColors.ltBlue,\n\n    },\n    teamContainer: {\n        // flex: 6,\n        maxHeight: 45,\n        minWidth: 80,\n        alignSelf: 'center',\n        justifyContent: 'center',\n\n    },\n    profileContainer: {\n        flex: 1,\n        alignSelf: 'center',\n        alignItems: 'flex-end',\n        // backgroundColor: AppColors.ltPink,\n    },\n\n    // logo top left\n    logoImage: {\n        width: 150,\n        height: 40,\n        alignSelf: 'flex-start',\n        marginBottom: 0,\n        marginTop: 0,\n    },\n\n    // phase top left\n    phaseTitle: {\n        fontSize: 19,\n        color: AppColors.text,\n        fontWeight: '700',\n    },\n\n    // team center\n    teamLabel: {\n        fontSize: 19,\n        color: AppColors.medGray,\n        fontWeight: '700',\n        backgroundColor: AppColors.lightGray,\n        borderRadius: 5,\n        alignSelf: 'center',\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n    },\n    alliance: {\n        blue: {\n            backgroundColor: AppColors.frcBlue,\n        },\n        red: {\n            backgroundColor: AppColors.frcRed,\n        }\n    },\n    // clock right\n    clockLabel: {\n        fontSize: 19,\n        color: AppColors.bodyText,\n        fontWeight: '500',\n        alignSelf: 'flex-end',\n    },\n\n    // profile top right\n    profileImage: {\n        width: 30,\n        height: 30,\n        borderRadius: 20,\n    },\n    pressed: {\n        opacity: 0.5,\n    },\n    modalContainer: {\n        flex: 1,\n        justifyContent: 'flex-start',\n        alignItems: 'flex-end',\n    },\n    initialsContainer: {\n        width: 30,\n        height: 30,\n        borderRadius: 15,\n        backgroundColor: 'lightgray', // Add a background color for the circle\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    initialsText: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        color: 'white', // Set the text color\n    },\n});\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAM5D,SAASC,WAAW;AACpB,OAAOC,MAAM;AACb,SAASC,WAAW,EAAEC,MAAM;AAC5B,OAAOC,SAAS;AAChB,OAAOC,cAAc;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9C,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAwE;EAAA,IAArEC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IAAEC,UAAU,GAAAH,IAAA,CAAVG,UAAU;IAAEC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IAAEC,iBAAiB,GAAAL,IAAA,CAAjBK,iBAAiB;EAC9F,IAAAC,WAAA,GAA6BzB,UAAU,CAACQ,WAAW,CAAC;IAA5CkB,QAAQ,GAAAD,WAAA,CAARC,QAAQ;IAAEC,MAAM,GAAAF,WAAA,CAANE,MAAM;EACxB,IAAAC,SAAA,GAA0C7B,QAAQ,CAAC,KAAK,CAAC;IAAA8B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,cAAc,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEtC,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAAED,eAAe,CAAC,CAACD,cAAc,CAAC;EAAE,CAAC;EAC/D,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IAAEF,eAAe,CAAC,KAAK,CAAC;IAAEL,MAAM,CAAC,CAAC;EAAE,CAAC;EAChE,IAAMQ,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;IAAE,IAAIJ,cAAc,EAAEE,WAAW,CAAC,CAAC;EAAE,CAAC;EAE1E,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtB,IAAQC,SAAS,GAAeX,QAAQ,CAAhCW,SAAS;MAAEC,QAAQ,GAAKZ,QAAQ,CAArBY,QAAQ;IAC3B,IAAID,SAAS,IAAIC,QAAQ,EAAE;MACvB,OAAQ,GAAED,SAAS,CAACE,MAAM,CAAC,CAAC,CAAE,GAAED,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAE,EAAC;IACxD,CAAC,MAAM,IAAIF,SAAS,EAAE;MAClB,OAAOA,SAAS,CAACE,MAAM,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM,IAAID,QAAQ,EAAE;MACjB,OAAOA,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC;IAC7B;IACA,OAAO,EAAE;EACb,CAAC;EAED,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IAC/B,IAAQC,YAAY,GAAKf,QAAQ,CAAzBe,YAAY;IAEpB,IAAIA,YAAY,EAAE;MACd,OACI1B,IAAA,CAACX,KAAK;QACFsC,MAAM,EAAE;UAAEC,GAAG,EAAEF;QAAa,CAAE;QAC9BG,KAAK,EAAEC,MAAM,CAACJ;MAAa,CAC9B,CAAC;IAEV,CAAC,MAAM;MACH,IAAMK,QAAQ,GAAGV,WAAW,CAAC,CAAC;MAC9B,OACIrB,IAAA,CAACZ,IAAI;QAACyC,KAAK,EAAEC,MAAM,CAACE,iBAAkB;QAAAC,QAAA,EAClCjC,IAAA,CAACV,IAAI;UAACuC,KAAK,EAAEC,MAAM,CAACI,YAAa;UAAAD,QAAA,EAAEF;QAAQ,CAAO;MAAC,CACjD,CAAC;IAEf;EACJ,CAAC;EAED,IAAMI,aAAa,GACfnC,IAAA,CAACR,SAAS;IAAC4C,OAAO,EAAElB,WAAY;IAC5BW,KAAK,EAAE,SAAAA,MAAAQ,KAAA;MAAA,IAAGC,OAAO,GAAAD,KAAA,CAAPC,OAAO;MAAA,OAAO,CAACR,MAAM,CAACS,gBAAgB,EAAED,OAAO,IAAIR,MAAM,CAACQ,OAAO,CAAC;IAAA,CAAC;IAAAL,QAAA,EAE5ER,oBAAoB,CAAC;EAAC,CAChB,CACd;EAED,IAAMe,WAAW,GACbxC,IAAA,CAACT,KAAK;IACFkD,aAAa,EAAC,MAAM;IACpBC,WAAW,EAAE,IAAK;IAClBC,OAAO,EAAE3B,cAAe;IACxB4B,cAAc,EAAE1B,WAAY;IAAAe,QAAA,EAE5BjC,IAAA,CAACR,SAAS;MAAC4C,OAAO,EAAEhB,qBAAsB;MAACS,KAAK,EAAEC,MAAM,CAACe,cAAe;MAAAZ,QAAA,EACpEjC,IAAA,CAACZ,IAAI;QAACyC,KAAK,EAAEnC,MAAM,CAACoD,eAAgB;QAAAb,QAAA,EAChCjC,IAAA,CAACR,SAAS;UAACqC,KAAK,EAAEnC,MAAM,CAACqD,YAAa;UAACX,OAAO,EAAEjB,YAAa;UAAAc,QAAA,EACzDjC,IAAA,CAACV,IAAI;YAAA2C,QAAA,EAAC;UAAM,CAAM;QAAC,CACZ;MAAC,CAEV;IAAC,CACA;EAAC,CACT,CACV;EAED,IAAMe,YAAY,GACd9C,KAAA,CAACd,IAAI;IAACyC,KAAK,EAAEC,MAAM,CAACmB,eAAgB;IAAAhB,QAAA,GAChCjC,IAAA,CAACZ,IAAI;MAACyC,KAAK,EAAEC,MAAM,CAACoB,cAAe;MAAAjB,QAAA,EAC/BjC,IAAA,CAACX,KAAK;QAACwC,KAAK,EAAEC,MAAM,CAACqB,SAAU;QAACxB,MAAM,EAAEyB,OAAO,0BAA0B;MAAE,CAAE;IAAC,CAC5E,CAAC,EACNjB,aAAa,EACbK,WAAW;EAAA,CACV,CACT;EAED,IAAMa,UAAU,GACZnD,KAAA,CAACd,IAAI;IAACyC,KAAK,EAAEC,MAAM,CAACmB,eAAgB;IAAAhB,QAAA,GAChCjC,IAAA,CAACZ,IAAI;MAACyC,KAAK,EAAEC,MAAM,CAACoB,cAAe;MAAAjB,QAAA,EAC/BjC,IAAA,CAACV,IAAI;QAACuC,KAAK,EAAEC,MAAM,CAACwB,UAAW;QAAArB,QAAA,EAC1B5B,SAAS,CAACkD,KAAK,CAACC;MAAO,CACtB;IAAC,CACL,CAAC,EACPxD,IAAA,CAACZ,IAAI;MAACyC,KAAK,EAAEC,MAAM,CAAC2B,aAAc;MAAAxB,QAAA,EAC9BjC,IAAA,CAACV,IAAI;QAACuC,KAAK,EAAE,CAACC,MAAM,CAAC4B,SAAS,EAAE5B,MAAM,CAAC6B,QAAQ,CAACtD,SAAS,CAACuD,aAAa,CAAC,CAAE;QAAA3B,QAAA,EACrE5B,SAAS,CAACwD;MAAa,CACtB;IAAC,CACL,CAAC,EACP7D,IAAA,CAACZ,IAAI;MAACyC,KAAK,EAAEC,MAAM,CAACoB,cAAe;MAAAjB,QAAA,EAC/BjC,IAAA,CAACF,cAAc;QACXgE,WAAW,EAAExD,WAAY;QACzByD,GAAG,EAAEtD,iBAAkB;QACvBF,UAAU,EAAEA,UAAW;QAACC,UAAU,EAAEA,UAAW;QAC/CwD,UAAU,EAAE3D,SAAS,CAAC2D;MAAW,CACpC;IAAC,CACA,CAAC;EAAA,CACL,CACT;EAEDC,OAAO,CAACC,GAAG,CAAC7D,SAAS,CAAC;EACtB,OAAOA,SAAS,CAACkD,KAAK,KAAK3D,MAAM,CAACuE,MAAM,GAAGnB,YAAY,GAAGK,UAAU;AACxE;AAEA,IAAMvB,MAAM,GAAG3C,UAAU,CAACiF,MAAM,CAAC;EAE7BnB,eAAe,EAAE;IACboB,QAAQ,EAAE,MAAM;IAChBC,MAAM,EAAE,EAAE;IACVC,iBAAiB,EAAE,EAAE;IACrBC,UAAU,EAAE,YAAY;IACxBC,cAAc,EAAE,QAAQ;IACxBC,aAAa,EAAE;EAEnB,CAAC;EACDxB,cAAc,EAAE;IACZyB,IAAI,EAAE,CAAC;IACPC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,QAAQ;IACnBJ,cAAc,EAAE;EAGpB,CAAC;EACDhB,aAAa,EAAE;IAEXqB,SAAS,EAAE,EAAE;IACbT,QAAQ,EAAE,EAAE;IACZQ,SAAS,EAAE,QAAQ;IACnBJ,cAAc,EAAE;EAEpB,CAAC;EACDlC,gBAAgB,EAAE;IACdoC,IAAI,EAAE,CAAC;IACPE,SAAS,EAAE,QAAQ;IACnBL,UAAU,EAAE;EAEhB,CAAC;EAGDrB,SAAS,EAAE;IACP4B,KAAK,EAAE,GAAG;IACVT,MAAM,EAAE,EAAE;IACVO,SAAS,EAAE,YAAY;IACvBG,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACf,CAAC;EAGD3B,UAAU,EAAE;IACR4B,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAEtF,SAAS,CAACuF,IAAI;IACrBC,UAAU,EAAE;EAChB,CAAC;EAGD3B,SAAS,EAAE;IACPwB,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAEtF,SAAS,CAACyF,OAAO;IACxBD,UAAU,EAAE,KAAK;IACjBE,eAAe,EAAE1F,SAAS,CAAC2F,SAAS;IACpCC,YAAY,EAAE,CAAC;IACfZ,SAAS,EAAE,QAAQ;IACnBa,eAAe,EAAE,EAAE;IACnBnB,iBAAiB,EAAE;EACvB,CAAC;EACDZ,QAAQ,EAAE;IACNgC,IAAI,EAAE;MACFJ,eAAe,EAAE1F,SAAS,CAAC+F;IAC/B,CAAC;IACDC,GAAG,EAAE;MACDN,eAAe,EAAE1F,SAAS,CAACiG;IAC/B;EACJ,CAAC;EAEDC,UAAU,EAAE;IACRb,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAEtF,SAAS,CAACmG,QAAQ;IACzBX,UAAU,EAAE,KAAK;IACjBR,SAAS,EAAE;EACf,CAAC;EAGDnD,YAAY,EAAE;IACVqD,KAAK,EAAE,EAAE;IACTT,MAAM,EAAE,EAAE;IACVmB,YAAY,EAAE;EAClB,CAAC;EACDnD,OAAO,EAAE;IACL2D,OAAO,EAAE;EACb,CAAC;EACDpD,cAAc,EAAE;IACZ8B,IAAI,EAAE,CAAC;IACPF,cAAc,EAAE,YAAY;IAC5BD,UAAU,EAAE;EAChB,CAAC;EACDxC,iBAAiB,EAAE;IACf+C,KAAK,EAAE,EAAE;IACTT,MAAM,EAAE,EAAE;IACVmB,YAAY,EAAE,EAAE;IAChBF,eAAe,EAAE,WAAW;IAC5Bd,cAAc,EAAE,QAAQ;IACxBD,UAAU,EAAE;EAChB,CAAC;EACDtC,YAAY,EAAE;IACVgD,QAAQ,EAAE,EAAE;IACZG,UAAU,EAAE,MAAM;IAClBF,KAAK,EAAE;EACX;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}