{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport axios from 'axios';\nimport { TBA_KEY, TBA_URL } from \"../config.js\";\nvar BlueAllianceApi = function () {\n  function BlueAllianceApi() {\n    _classCallCheck(this, BlueAllianceApi);\n  }\n  _createClass(BlueAllianceApi, null, [{\n    key: \"fetchEventInfo\",\n    value: function () {\n      var _fetchEventInfo = _asyncToGenerator(function* (eventKey) {\n        var _yield$Promise$all = yield Promise.all([this._fetchData(`event/${eventKey}`), this._fetchData(`event/${eventKey}/matches/simple`)]),\n          _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2),\n          event = _yield$Promise$all2[0],\n          matchArray = _yield$Promise$all2[1];\n        var matches = {};\n        matchArray.forEach(function (match, index) {\n          var comp_level = match.comp_level,\n            match_number = match.match_number;\n          if (comp_level === 'qm') {\n            matches[match_number] = match;\n          }\n        });\n        var eventInfo = {\n          eventKey: eventKey,\n          event: event,\n          matches: matches,\n          fetchedDate: new Date()\n        };\n        return eventInfo;\n      });\n      function fetchEventInfo(_x) {\n        return _fetchEventInfo.apply(this, arguments);\n      }\n      return fetchEventInfo;\n    }()\n  }, {\n    key: \"_fetchData\",\n    value: function () {\n      var _fetchData2 = _asyncToGenerator(function* (endpoint) {\n        try {\n          var _yield$axios$get = yield axios.get(`${this.tbaUrl}/${endpoint}`, this.header),\n            data = _yield$axios$get.data;\n          return data;\n        } catch (err) {\n          console.log(`_fetchData fail ${endpoint}`);\n        }\n      });\n      function _fetchData(_x2) {\n        return _fetchData2.apply(this, arguments);\n      }\n      return _fetchData;\n    }()\n  }]);\n  return BlueAllianceApi;\n}();\nBlueAllianceApi.apiToken = TBA_KEY;\nBlueAllianceApi.header = {\n  headers: {\n    \"X-TBA-Auth-Key\": TBA_KEY\n  }\n};\nBlueAllianceApi.tbaUrl = TBA_URL;\nexport { BlueAllianceApi as default };","map":{"version":3,"names":["axios","TBA_KEY","TBA_URL","BlueAllianceApi","_classCallCheck","_createClass","key","value","_fetchEventInfo","_asyncToGenerator","eventKey","_yield$Promise$all","Promise","all","_fetchData","_yield$Promise$all2","_slicedToArray","event","matchArray","matches","forEach","match","index","comp_level","match_number","eventInfo","fetchedDate","Date","fetchEventInfo","_x","apply","arguments","_fetchData2","endpoint","_yield$axios$get","get","tbaUrl","header","data","err","console","log","_x2","apiToken","headers","default"],"sources":["/Users/sgreene/src/cs1/api/BlueAllianceApi.js"],"sourcesContent":["import axios from 'axios';\nimport { TBA_KEY, TBA_URL } from '../config.js';\n\nexport default class BlueAllianceApi {\n    static apiToken = TBA_KEY;\n    static header = { headers: { \"X-TBA-Auth-Key\": TBA_KEY } };\n    static tbaUrl = TBA_URL;\n\n    static async fetchEventInfo(eventKey) {\n        const [event, matchArray] = await Promise.all([ \n            this._fetchData(`event/${eventKey}`),\n            this._fetchData(`event/${eventKey}/matches/simple`),\n        ]);\n\n        let matches = {};\n        matchArray.forEach((match, index) => {\n            const { comp_level, match_number } = match;\n            if (comp_level === 'qm') {\n                matches[match_number] = match;\n            }\n        });\n\n        const eventInfo = {\n            eventKey,\n            event,\n            matches,\n            fetchedDate: new Date(),\n        };\n\n        return eventInfo;\n        \n    }\n\n    // private functions\n    static async _fetchData(endpoint) {\n        try {\n            const { data } = await axios.get(\n                `${this.tbaUrl}/${endpoint}`,\n                this.header,\n            );\n            return data;\n        } catch (err) {\n            console.log(`_fetchData fail ${endpoint}`);\n        }\n    }\n\n}\n\n\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,OAAO;AAAuB,IAE3BC,eAAe;EAAA,SAAAA,gBAAA;IAAAC,eAAA,OAAAD,eAAA;EAAA;EAAAE,YAAA,CAAAF,eAAA;IAAAG,GAAA;IAAAC,KAAA;MAAA,IAAAC,eAAA,GAAAC,iBAAA,CAKhC,WAA4BC,QAAQ,EAAE;QAClC,IAAAC,kBAAA,SAAkCC,OAAO,CAACC,GAAG,CAAC,CAC1C,IAAI,CAACC,UAAU,CAAE,SAAQJ,QAAS,EAAC,CAAC,EACpC,IAAI,CAACI,UAAU,CAAE,SAAQJ,QAAS,iBAAgB,CAAC,CACtD,CAAC;UAAAK,mBAAA,GAAAC,cAAA,CAAAL,kBAAA;UAHKM,KAAK,GAAAF,mBAAA;UAAEG,UAAU,GAAAH,mBAAA;QAKxB,IAAII,OAAO,GAAG,CAAC,CAAC;QAChBD,UAAU,CAACE,OAAO,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAK;UACjC,IAAQC,UAAU,GAAmBF,KAAK,CAAlCE,UAAU;YAAEC,YAAY,GAAKH,KAAK,CAAtBG,YAAY;UAChC,IAAID,UAAU,KAAK,IAAI,EAAE;YACrBJ,OAAO,CAACK,YAAY,CAAC,GAAGH,KAAK;UACjC;QACJ,CAAC,CAAC;QAEF,IAAMI,SAAS,GAAG;UACdf,QAAQ,EAARA,QAAQ;UACRO,KAAK,EAALA,KAAK;UACLE,OAAO,EAAPA,OAAO;UACPO,WAAW,EAAE,IAAIC,IAAI,CAAC;QAC1B,CAAC;QAED,OAAOF,SAAS;MAEpB,CAAC;MAAA,SAAAG,eAAAC,EAAA;QAAA,OAAArB,eAAA,CAAAsB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAH,cAAA;IAAA;EAAA;IAAAtB,GAAA;IAAAC,KAAA;MAAA,IAAAyB,WAAA,GAAAvB,iBAAA,CAGD,WAAwBwB,QAAQ,EAAE;QAC9B,IAAI;UACA,IAAAC,gBAAA,SAAuBlC,KAAK,CAACmC,GAAG,CAC3B,GAAE,IAAI,CAACC,MAAO,IAAGH,QAAS,EAAC,EAC5B,IAAI,CAACI,MACT,CAAC;YAHOC,IAAI,GAAAJ,gBAAA,CAAJI,IAAI;UAIZ,OAAOA,IAAI;QACf,CAAC,CAAC,OAAOC,GAAG,EAAE;UACVC,OAAO,CAACC,GAAG,CAAE,mBAAkBR,QAAS,EAAC,CAAC;QAC9C;MACJ,CAAC;MAAA,SAAAnB,WAAA4B,GAAA;QAAA,OAAAV,WAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAjB,UAAA;IAAA;EAAA;EAAA,OAAAX,eAAA;AAAA;AAzCgBA,eAAe,CACzBwC,QAAQ,GAAG1C,OAAO;AADRE,eAAe,CAEzBkC,MAAM,GAAG;EAAEO,OAAO,EAAE;IAAE,gBAAgB,EAAE3C;EAAQ;AAAE,CAAC;AAFzCE,eAAe,CAGzBiC,MAAM,GAAGlC,OAAO;AAAA,SAHNC,eAAe,IAAA0C,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}