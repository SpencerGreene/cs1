{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AppColors from \"../styles/AppColors\";\nimport Styles from \"../styles/Styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MatchPicker = function MatchPicker(_ref) {\n  var eventInfo = _ref.eventInfo,\n    onMatchSelect = _ref.onMatchSelect,\n    matchType = _ref.matchType,\n    matchNumber = _ref.matchNumber;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedMatchType = _useState2[0],\n    setSelectedMatchType = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMatch = _useState4[0],\n    setSelectedMatch = _useState4[1];\n  var handleTypeClick = function handleTypeClick(matchType) {\n    setSelectedMatchType(matchType);\n    onMatchSelect(matchType, selectedMatch);\n  };\n  var handleMatchText = function handleMatchText(text) {\n    var isNumber = !isNaN(parseInt(text));\n    var matchNumber = isNumber ? parseInt(text) : null;\n    setSelectedMatch(matchNumber);\n    onMatchSelect(selectedMatchType, matchNumber);\n  };\n  useEffect(function () {\n    if (matchType !== selectedMatchType) setSelectedMatchType(matchType);\n    if (matchNumber !== selectedMatch) setSelectedMatch(matchNumber);\n  }, [matchType, matchNumber]);\n  var matchTypeButton = function matchTypeButton(choice, index) {\n    return _jsx(Pressable, {\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [styles.optionButton, selectedMatchType === choice ? styles.selectedButton['blue'] : null, pressed && selectedMatchType === null ? styles.pressedButton : null];\n      },\n      onPress: function onPress() {\n        return handleTypeClick(choice);\n      },\n      children: _jsx(Text, {\n        style: [styles.buttonText, styles.buttonText['blue'], selectedMatchType === choice ? styles.buttonText.selected : null],\n        children: choice\n      })\n    }, index);\n  };\n  var matchNumberInput = function matchNumberInput() {\n    return _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      children: [_jsxs(Text, {\n        style: Styles.bodyText,\n        children: [eventInfo.eventKey, \"_\"]\n      }), _jsx(TextInput, {\n        id: \"matchNumber\",\n        style: [Styles.textInput, {\n          maxWidth: 10,\n          borderColor: AppColors.lightGray\n        }],\n        onChangeText: handleMatchText,\n        value: selectedMatch ? selectedMatch.toString() : ''\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    children: [_jsxs(View, {\n      style: styles.optionContainer,\n      children: [matchTypeButton('Practice', 0), matchTypeButton('Qual', 1)]\n    }), _jsx(View, {\n      style: styles.optionContainer,\n      children: selectedMatchType === 'Qual' && matchNumberInput()\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  optionContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flex: 1,\n    paddingLeft: 20\n  },\n  optionButton: {\n    backgroundColor: AppColors.background,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginVertical: 5,\n    minWidth: 60,\n    borderWidth: 1,\n    borderColor: AppColors.lightGray\n  },\n  selectedButton: {\n    red: {\n      backgroundColor: AppColors.frcRed\n    },\n    blue: {\n      backgroundColor: AppColors.frcBlue\n    }\n  },\n  pressedButton: {\n    backgroundColor: 'gray'\n  },\n  buttonText: {\n    fontWeight: 600,\n    red: {\n      color: AppColors.frcRed\n    },\n    blue: {\n      color: AppColors.frcBlue\n    },\n    selected: {\n      color: AppColors.surface\n    }\n  }\n});\nexport default MatchPicker;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Pressable","StyleSheet","TextInput","AppColors","Styles","jsx","_jsx","jsxs","_jsxs","MatchPicker","_ref","eventInfo","onMatchSelect","matchType","matchNumber","_useState","_useState2","_slicedToArray","selectedMatchType","setSelectedMatchType","_useState3","_useState4","selectedMatch","setSelectedMatch","handleTypeClick","handleMatchText","text","isNumber","isNaN","parseInt","matchTypeButton","choice","index","style","_ref2","pressed","styles","optionButton","selectedButton","pressedButton","onPress","children","buttonText","selected","matchNumberInput","flexDirection","alignItems","bodyText","eventKey","id","textInput","maxWidth","borderColor","lightGray","onChangeText","value","toString","optionContainer","create","justifyContent","flex","paddingLeft","backgroundColor","background","padding","borderRadius","marginVertical","minWidth","borderWidth","red","frcRed","blue","frcBlue","fontWeight","color","surface"],"sources":["/Users/sgreene/src/cs1/components/MatchPicker.js"],"sourcesContent":["// MatchPicker.js\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, Pressable, StyleSheet, TextInput } from 'react-native';\nimport AppColors from '../styles/AppColors';\nimport Styles from '../styles/Styles';\n\nconst MatchPicker = ({ eventInfo, onMatchSelect, matchType, matchNumber }) => {\n    const [selectedMatchType, setSelectedMatchType] = useState('');\n    const [selectedMatch, setSelectedMatch] = useState(0);\n\n    const handleTypeClick = (matchType) => {\n        setSelectedMatchType(matchType);\n        onMatchSelect(matchType, selectedMatch);\n    };\n\n    const handleMatchText = (text) => {\n        const isNumber = !isNaN(parseInt(text));\n        const matchNumber = isNumber ? parseInt(text) : null;\n        setSelectedMatch(matchNumber);\n        onMatchSelect(selectedMatchType, matchNumber);\n    };\n\n    useEffect(() => {\n        if (matchType !== selectedMatchType) setSelectedMatchType(matchType);\n        if (matchNumber !== selectedMatch) setSelectedMatch(matchNumber);\n    }, [matchType, matchNumber]);\n\n    const matchTypeButton = (choice, index) => {\n        return (\n            <Pressable\n                key={index}\n                style={({ pressed }) => [\n                    styles.optionButton,\n                    selectedMatchType === choice ? styles.selectedButton['blue'] : null,\n                    pressed && selectedMatchType === null ? styles.pressedButton : null,\n                ]}\n                onPress={() => handleTypeClick(choice)}\n            >\n                <Text style={[\n                    styles.buttonText,\n                    styles.buttonText['blue'],\n                    selectedMatchType === choice ? styles.buttonText.selected : null,\n                ]}>{choice}</Text>\n            </Pressable>\n        );\n    };\n\n    const matchNumberInput = () => {\n        return (\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                <Text style={Styles.bodyText}>{eventInfo.eventKey}_</Text>\n                <TextInput\n                    id=\"matchNumber\"\n                    style={[Styles.textInput, {maxWidth: 10, borderColor: AppColors.lightGray}]}\n                    onChangeText={handleMatchText}\n                    value={selectedMatch ? selectedMatch.toString() : ''}\n                />\n            </View>\n        );\n    };\n\n    return (\n        <View style={{ flexDirection: 'row' }}>\n            <View style={styles.optionContainer}>\n                {matchTypeButton('Practice', 0)}\n                {matchTypeButton('Qual', 1)}\n            </View>\n            <View style={styles.optionContainer}>\n                {selectedMatchType === 'Qual' && matchNumberInput()}\n            </View>\n\n        </View>\n\n    );\n};\n\nconst styles = StyleSheet.create({\n    optionContainer: {\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flex: 1,\n        paddingLeft: 20,\n    },\n    optionButton: {\n        backgroundColor: AppColors.background,\n        padding: 10,\n        borderRadius: 5,\n        alignItems: 'center',\n        marginVertical: 5,\n        minWidth: 60,\n        borderWidth: 1,\n        borderColor: AppColors.lightGray,\n    },\n    selectedButton: {\n        red: {\n            backgroundColor: AppColors.frcRed,\n        },\n        blue: {\n            backgroundColor: AppColors.frcBlue,\n        },\n    },\n    pressedButton: {\n        backgroundColor: 'gray',\n    },\n    buttonText: {\n        fontWeight: 600,\n        red: {\n            color: AppColors.frcRed,\n        },\n        blue: {\n            color: AppColors.frcBlue,\n        },\n        selected: {\n            color: AppColors.surface,\n        }\n    },\n});\n\nexport default MatchPicker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}