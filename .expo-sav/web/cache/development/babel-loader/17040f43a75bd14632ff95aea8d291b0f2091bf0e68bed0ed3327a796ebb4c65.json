{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppColors from \"../styles/AppColors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Button(_ref) {\n  var label = _ref.label,\n    theme = _ref.theme,\n    _onPress = _ref.onPress,\n    clickable = _ref.clickable;\n  var themeStyle = styles[theme];\n  return _jsx(View, {\n    style: [styles.buttonContainer, themeStyle.buttonContainer],\n    children: _jsx(Pressable, {\n      style: [styles.all.button, themeStyle == null ? void 0 : themeStyle.button, !clickable && styles.inactive.button],\n      onPress: function onPress() {\n        return clickable && _onPress();\n      },\n      children: _jsx(Text, {\n        style: [styles.all.buttonLabel, themeStyle == null ? void 0 : themeStyle.buttonLabel],\n        children: label\n      })\n    })\n  });\n}\nvar stylesAll = StyleSheet.create({\n  buttonContainer: {\n    minHeight: 40,\n    marginHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    borderRadius: 5,\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonIcon: {\n    paddingRight: 8\n  },\n  buttonLabel: {\n    fontSize: 15,\n    fontWeight: '600'\n  }\n});\nvar stylesForward = StyleSheet.create({\n  buttonContainer: {\n    flex: 7\n  },\n  button: {\n    backgroundColor: AppColors.primary\n  },\n  buttonLabel: {\n    color: AppColors.surface\n  }\n});\nvar stylesBack = StyleSheet.create({\n  buttonContainer: {\n    flex: 3\n  },\n  button: {\n    backgroundColor: AppColors.background,\n    borderWidth: 1,\n    borderColor: AppColors.textGray\n  },\n  buttonLabel: {\n    color: AppColors.textGray\n  }\n});\nvar stylesPrimary = StyleSheet.create({\n  buttonContainer: {\n    minWidth: '100%',\n    minHeight: 40\n  },\n  button: {\n    backgroundColor: AppColors.primary\n  },\n  buttonLabel: {\n    color: AppColors.surface\n  }\n});\nvar stylesInactive = StyleSheet.create({\n  button: {\n    backgroundColor: AppColors.buttonInactiveBackground,\n    color: AppColors.bodyText\n  }\n});\nvar styles = {\n  all: stylesAll,\n  forward: stylesForward,\n  back: stylesBack,\n  primary: stylesPrimary,\n  inactive: StyleSheet.create({\n    button: {\n      backgroundColor: AppColors.buttonInactiveBackground,\n      color: AppColors.bodyText\n    }\n  })\n};","map":{"version":3,"names":["AppColors","jsx","_jsx","Button","_ref","label","theme","onPress","clickable","themeStyle","styles","View","style","buttonContainer","children","Pressable","all","button","inactive","Text","buttonLabel","stylesAll","StyleSheet","create","minHeight","marginHorizontal","alignItems","justifyContent","borderRadius","flex","buttonIcon","paddingRight","fontSize","fontWeight","stylesForward","backgroundColor","primary","color","surface","stylesBack","background","borderWidth","borderColor","textGray","stylesPrimary","minWidth","stylesInactive","buttonInactiveBackground","bodyText","forward","back"],"sources":["/Users/sgreene/src/cs1/components/Button.js"],"sourcesContent":["import { StyleSheet, View, Pressable, Text } from 'react-native';\nimport AppColors from '../styles/AppColors';\n\nexport default function Button({ label, theme, onPress, clickable }) {\n    const themeStyle = styles[theme];\n    return (\n        <View style={[styles.buttonContainer, themeStyle.buttonContainer] }>\n            <Pressable \n                style={[ styles.all.button, themeStyle?.button, !clickable && styles.inactive.button ]}\n                onPress={() => clickable && onPress()}\n            >\n                <Text style={[ styles.all.buttonLabel, themeStyle?.buttonLabel] }>{label}</Text>\n            </Pressable>\n        </View>\n    );\n}\n\nconst stylesAll = StyleSheet.create({\n    buttonContainer: {\n        minHeight: 40,\n        marginHorizontal: 20,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    button: {\n        borderRadius: 5,\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonIcon: {\n        paddingRight: 8,\n    },\n    buttonLabel: {\n        fontSize: 15,\n        fontWeight: '600',\n    }\n});\n\nconst stylesForward = StyleSheet.create({\n    buttonContainer: {\n        flex: 7,\n    },\n    button: {\n        backgroundColor: AppColors.primary,\n    },\n    buttonLabel: {\n        color: AppColors.surface,\n    }\n});\n\nconst stylesBack = StyleSheet.create({\n    buttonContainer: {\n        flex: 3,\n    },\n    button: {\n        backgroundColor: AppColors.background,\n        borderWidth: 1,\n        borderColor: AppColors.textGray,\n    },\n    buttonLabel: {\n        color: AppColors.textGray,\n    },\n});\n\nconst stylesPrimary = StyleSheet.create({\n    buttonContainer: {\n        minWidth: '100%',\n        minHeight: 40,\n    },\n    button: {\n        backgroundColor: AppColors.primary\n    },\n    buttonLabel: {\n        color: AppColors.surface,\n    }\n});\n\nconst stylesInactive = StyleSheet.create({\n    button: {\n        backgroundColor: AppColors.buttonInactiveBackground,\n        color: AppColors.bodyText,\n    }\n\n});\n\nconst styles = {\n    all: stylesAll,\n    forward: stylesForward,\n    back: stylesBack,\n    primary: stylesPrimary,\n    inactive: StyleSheet.create({\n        button: {\n            backgroundColor: AppColors.buttonInactiveBackground,\n            color: AppColors.bodyText,\n        },\n    }),\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}