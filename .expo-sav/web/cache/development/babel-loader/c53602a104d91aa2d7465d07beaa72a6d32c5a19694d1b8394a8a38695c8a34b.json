{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport Event from \"./Event\";\nvar ProgressEvent = function (_Event) {\n  _inherits(ProgressEvent, _Event);\n  var _super = _createSuper(ProgressEvent);\n  function ProgressEvent(lengthComputable, loaded, total) {\n    var _this;\n    _classCallCheck(this, ProgressEvent);\n    _this = _super.call(this);\n    _this._lengthComputable = false;\n    _this._loaded = -1;\n    _this._total = -1;\n    _this._lengthComputable = lengthComputable;\n    _this._loaded = loaded;\n    _this._total = total;\n    return _this;\n  }\n  _createClass(ProgressEvent, [{\n    key: \"lengthComputable\",\n    get: function get() {\n      return this._lengthComputable;\n    }\n  }, {\n    key: \"loaded\",\n    get: function get() {\n      return this._loaded;\n    }\n  }, {\n    key: \"total\",\n    get: function get() {\n      return this._total;\n    }\n  }]);\n  return ProgressEvent;\n}(Event);\nexport { ProgressEvent as default };","map":{"version":3,"names":["Event","ProgressEvent","_Event","_inherits","_super","_createSuper","lengthComputable","loaded","total","_this","_classCallCheck","call","_lengthComputable","_loaded","_total","_createClass","key","get","default"],"sources":["/Users/sgreene/src/cs1/node_modules/react-native-fetch-blob/polyfill/ProgressEvent.js"],"sourcesContent":["// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport Event from './Event'\n\nexport default class ProgressEvent extends Event {\n\n  _lengthComputable : boolean = false;\n  _loaded : number = -1;\n  _total : numver = -1;\n\n  constructor(lengthComputable, loaded, total) {\n    super()\n    this._lengthComputable = lengthComputable;\n    this._loaded = loaded\n    this._total = total\n  }\n\n  get lengthComputable() {\n    return this._lengthComputable\n  }\n\n  get loaded() {\n    return this._loaded\n  }\n\n  get total() {\n    return this._total\n  }\n\n}\n"],"mappings":";;;;;;;AAIA,OAAOA,KAAK;AAAe,IAENC,aAAa,aAAAC,MAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,aAAA;EAMhC,SAAAA,cAAYK,gBAAgB,EAAEC,MAAM,EAAEC,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAT,aAAA;IAC3CQ,KAAA,GAAAL,MAAA,CAAAO,IAAA;IAAOF,KAAA,CALTG,iBAAiB,GAAa,KAAK;IAAAH,KAAA,CACnCI,OAAO,GAAY,CAAC,CAAC;IAAAJ,KAAA,CACrBK,MAAM,GAAY,CAAC,CAAC;IAIlBL,KAAA,CAAKG,iBAAiB,GAAGN,gBAAgB;IACzCG,KAAA,CAAKI,OAAO,GAAGN,MAAM;IACrBE,KAAA,CAAKK,MAAM,GAAGN,KAAK;IAAA,OAAAC,KAAA;EACrB;EAACM,YAAA,CAAAd,aAAA;IAAAe,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAuB;MACrB,OAAO,IAAI,CAACL,iBAAiB;IAC/B;EAAC;IAAAI,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAa;MACX,OAAO,IAAI,CAACJ,OAAO;IACrB;EAAC;IAAAG,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAY;MACV,OAAO,IAAI,CAACH,MAAM;IACpB;EAAC;EAAA,OAAAb,aAAA;AAAA,EAvBwCD,KAAK;AAAA,SAA3BC,aAAa,IAAAiB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}