{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef, useImperativeHandle } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AppColors from \"../styles/AppColors\";\nimport { CLOCKSTATES } from \"../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CountdownTimer = React.forwardRef(function (_ref, ref) {\n  var initialTime = _ref.initialTime,\n    clockState = _ref.clockState,\n    startTimer = _ref.startTimer,\n    resetTimer = _ref.resetTimer;\n  var _useState = useState(initialTime),\n    _useState2 = _slicedToArray(_useState, 2),\n    time = _useState2[0],\n    setTime = _useState2[1];\n  var timerRef = useRef(null);\n  var isResetRef = useRef(false);\n  var handleStartTimer = function handleStartTimer() {\n    isResetRef.current = false;\n    clearInterval(timerRef.current);\n    timerRef.current = null;\n    console.log('timerRef.current after clearing:', timerRef.current);\n    console.log('handleStartTimer called');\n    if (!timerRef.current) {\n      timerRef.current = setInterval(function () {\n        setTime(function (prevTime) {\n          if (prevTime > 0) {\n            return prevTime - 1;\n          } else {\n            clearInterval(timerRef.current);\n            timerRef.current = null;\n            return 0;\n          }\n        });\n      }, 1000);\n    } else {\n      console.log('we already got one');\n    }\n  };\n  var handleResetTimer = function handleResetTimer() {\n    console.log('resetTimer triggered');\n    clearInterval(timerRef.current);\n    setTime(initialTime);\n    isResetRef.current = true;\n    resetTimer && resetTimer();\n    isResetRef.current = false;\n  };\n  useEffect(function () {\n    return function () {\n      return clearInterval(timerRef.current);\n    };\n  }, []);\n  useEffect(function () {\n    console.log('set ref triggered');\n    ref.current = {\n      startTimer: handleStartTimer,\n      resetTimer: handleResetTimer\n    };\n  }, []);\n  useImperativeHandle(ref, function () {\n    return {\n      startTimer: handleStartTimer,\n      resetTimer: handleResetTimer,\n      isReset: function isReset() {\n        return isResetRef.current;\n      }\n    };\n  }, [handleStartTimer, handleResetTimer]);\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n  return _jsx(View, {\n    children: clockState !== CLOCKSTATES.hidden && _jsx(Text, {\n      style: styles.clockLabel,\n      children: `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`\n    })\n  });\n});\nexport default CountdownTimer;\nvar styles = StyleSheet.create({\n  clockLabel: {\n    fontSize: 19,\n    color: AppColors.bodyText,\n    fontWeight: '500',\n    alignSelf: 'flex-end'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useRef","useImperativeHandle","Text","View","StyleSheet","AppColors","CLOCKSTATES","jsx","_jsx","CountdownTimer","forwardRef","_ref","ref","initialTime","clockState","startTimer","resetTimer","_useState","_useState2","_slicedToArray","time","setTime","timerRef","isResetRef","handleStartTimer","current","clearInterval","console","log","setInterval","prevTime","handleResetTimer","isReset","minutes","Math","floor","seconds","children","hidden","style","styles","clockLabel","create","fontSize","color","bodyText","fontWeight","alignSelf"],"sources":["/Users/sgreene/src/cs1/components/CountdownTimer.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useImperativeHandle } from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport AppColors from '../styles/AppColors';\nimport { CLOCKSTATES } from '../config';\n\nconst CountdownTimer = React.forwardRef(({ initialTime, clockState, startTimer, resetTimer }, ref) => {\n    const [time, setTime] = useState(initialTime);\n    const timerRef = useRef(null);\n    const isResetRef = useRef(false);\n\n    const handleStartTimer = () => {\n        // Reset the isReset flag when starting the timer\n        isResetRef.current = false;\n\n        // Clear any existing interval\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n        console.log('timerRef.current after clearing:', timerRef.current);\n\n        console.log('handleStartTimer called');\n        if (!timerRef.current) {\n            timerRef.current = setInterval(() => {\n                setTime((prevTime) => {\n                    if (prevTime > 0) {\n                        return prevTime - 1;\n                    } else {\n                        clearInterval(timerRef.current);\n                        timerRef.current = null;\n                        // Handle timer expiration, e.g., show a message or trigger an action\n                        return 0;\n                    }\n                });\n            }, 1000);\n        } else {\n            console.log('we already got one');\n        }\n    };\n\n    const handleResetTimer = () => {\n        console.log('resetTimer triggered');\n        clearInterval(timerRef.current);\n        setTime(initialTime);\n        isResetRef.current = true;\n        resetTimer && resetTimer();\n        isResetRef.current = false;\n    };\n\n    useEffect(() => {\n        return () => clearInterval(timerRef.current);\n    }, []);\n\n    // useEffect(() => {\n    //     console.log('onStart triggered');\n\n    //     onStart && onStart(startTimer);\n    // }, [onStart]);\n\n    useEffect(() => {\n        console.log('set ref triggered');\n\n        ref.current = {\n            startTimer: handleStartTimer,\n            resetTimer: handleResetTimer,\n        };\n        // }, [ref, handleStartTimer, handleResetTimer]);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        startTimer: handleStartTimer,\n        resetTimer: handleResetTimer,\n        isReset: () => isResetRef.current,\n    }), [handleStartTimer, handleResetTimer]);\n\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n\n    return (\n        <View>\n            {clockState !== CLOCKSTATES.hidden &&\n                <Text style={styles.clockLabel}>\n                    {`${minutes}:${seconds < 10 ? '0' : ''}${seconds}`}\n                </Text>\n            }\n        </View>\n    );\n});\n\nexport default CountdownTimer;\n\nconst styles = StyleSheet.create({\n    clockLabel: {\n        fontSize: 19,\n        color: AppColors.bodyText,\n        fontWeight: '500',\n        alignSelf: 'flex-end',\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}