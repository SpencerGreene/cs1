{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { ERROR, LOG } from \"../logConfig\";\nimport { AuthContext } from \"../components/AuthProvider\";\nimport BubbleApi from \"../api/BubbleApi\";\nimport BlueAllianceApi from \"../api/BlueAllianceApi\";\nimport { ACTIONS, LOCALKEYS, PHASES, CLOCKSTATES } from \"../config\";\nimport Header from \"../components/Header\";\nimport ScoutPageSelect from \"./ScoutPageSelect\";\nimport ScoutPageGame from \"./ScoutPageGame\";\nimport ButtonsFwdBack from \"../components/ButtonsFwdBack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ScoutPage() {\n  var _appVariables$game2, _appVariables$game2$c, _appVariables$game2$c2, _appVariables$game2$c3;\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo,\n    appVariables = _useContext.appVariables,\n    setAppVariables = _useContext.setAppVariables,\n    eventInfo = _useContext.eventInfo,\n    setEventInfo = _useContext.setEventInfo,\n    colorDict = _useContext.colorDict,\n    setColorDict = _useContext.setColorDict,\n    lastChanged = _useContext.lastChanged,\n    setLastChanged = _useContext.setLastChanged;\n  var _useState = useState({\n      matchType: null,\n      matchNumber: null,\n      scoutTeamNumT: null,\n      allianceColor: null,\n      scoutSelectionValid: null,\n      phase: PHASES.select,\n      phaseOverride: false,\n      startTime: null,\n      clockState: CLOCKSTATES.hidden\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    gameState = _useState2[0],\n    setGameState = _useState2[1];\n  var maxGameTime = function maxGameTime() {\n    var _appVariables$game;\n    return 150 + (appVariables == null ? void 0 : (_appVariables$game = appVariables.game) == null ? void 0 : _appVariables$game.autoTeleSeconds);\n  };\n  var doAction = function doAction(action) {\n    LOG('action=', action);\n    switch (action) {\n      case ACTIONS.clearConditions:\n        break;\n      case ACTIONS.clearMatchTeam:\n        return {\n          scoutTeamNumT: null,\n          allianceColor: null\n        };\n      case ACTIONS.deleteCounts:\n        break;\n      case ACTIONS.deleteScout:\n        break;\n      case ACTIONS.incrementMatchNum:\n        var matchNumber = gameState.matchNumber + 1;\n        AsyncStorage.setItem(LOCALKEYS.APPVAR, JSON.stringify(_objectSpread(_objectSpread({}, appVariables), {}, {\n          defaultMatchNum: matchNumber\n        })));\n        BubbleApi.apiSetDefaultMatchNumber(matchNumber);\n        return {\n          matchNumber: matchNumber\n        };\n      case ACTIONS.makeScout:\n        break;\n      case ACTIONS.reloadMaxed:\n        break;\n      case ACTIONS.startClock:\n        return {\n          startTime: new Date(),\n          clockState: CLOCKSTATES.running\n        };\n      case ACTIONS.hideClock:\n        return {\n          clockState: CLOCKSTATES.hidden\n        };\n      case ACTIONS.resetClock:\n        return {\n          startTime: null,\n          clockState: CLOCKSTATES.stopped\n        };\n      case ACTIONS.submit:\n        break;\n      case ACTIONS.clearPhaseOverride:\n        return {\n          phaseOverride: false\n        };\n      case ACTIONS.setPhaseOverride:\n        return {\n          phaseOverride: true\n        };\n      default:\n        ERROR('unknown action', action);\n    }\n    return {};\n  };\n  var setPhase = function setPhase(newPhase, actions) {\n    var phaseUpdate = {\n      phase: newPhase\n    };\n    var actionUpdates = actions ? actions.map(function (action) {\n      return doAction(action);\n    }) : [];\n    var updates = Object.assign.apply(Object, [phaseUpdate].concat(_toConsumableArray(actionUpdates)));\n    LOG({\n      actions: actions,\n      actionUpdates: actionUpdates,\n      updates: updates\n    });\n    setGameState(_objectSpread(_objectSpread({}, gameState), updates));\n  };\n  var overridePhase = function overridePhase(newPhase, actions) {\n    var allActions = [ACTIONS.setPhaseOverride].concat(_toConsumableArray(actions));\n    setPhase(newPhase, allActions);\n  };\n  useEffect(function () {\n    var populateLastChanged = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var apiLastChanged = yield BubbleApi.apiGetLastChanged();\n        setLastChanged(apiLastChanged);\n        LOG('last changed loaded from api', apiLastChanged);\n      });\n      return function populateLastChanged() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    populateLastChanged();\n  }, []);\n  useEffect(function () {\n    var setStartingMatch = function setStartingMatch(appVar) {\n      setGameState(_objectSpread(_objectSpread({}, gameState), {}, {\n        matchType: appVar.defaultMatchType,\n        matchNumber: appVar.defaultMatchNum\n      }));\n    };\n    var populateAppVariables = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        if (appVariables && userInfo && appVariables.teamNumT === userInfo.teamNumT) {\n          LOG('app Variables already in memory', appVariables);\n          setStartingMatch(appVariables);\n          return;\n        }\n        var storedAppVariables = yield AsyncStorage.getItem(LOCALKEYS.APPVAR);\n        if (storedAppVariables) {\n          var parsedAppVariables = JSON.parse(storedAppVariables);\n          parsedAppVariables.fetchedDate = new Date(parsedAppVariables.fetchedDate);\n          setAppVariables(parsedAppVariables);\n          LOG('app variables found in cache', parsedAppVariables);\n          setStartingMatch(parsedAppVariables);\n        } else {\n          var apiAppVariables = yield BubbleApi.apiGetAppVariables();\n          yield setAppVariables(apiAppVariables);\n          yield AsyncStorage.setItem(LOCALKEYS.APPVAR, JSON.stringify(apiAppVariables));\n          LOG('app variables loaded from api', apiAppVariables);\n          setStartingMatch(apiAppVariables);\n        }\n      });\n      return function populateAppVariables() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    populateAppVariables();\n  }, []);\n  var loadEventInfoApi = function () {\n    var _ref3 = _asyncToGenerator(function* (eventKey) {\n      var apiEventInfo = yield BlueAllianceApi.fetchEventInfo(eventKey);\n      setEventInfo(apiEventInfo);\n      yield AsyncStorage.setItem(LOCALKEYS.EVENT, JSON.stringify(apiEventInfo));\n      LOG('eventInfo loaded from api', apiEventInfo);\n    });\n    return function loadEventInfoApi(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var validEvent = function validEvent(event) {\n      return event && event.eventKey === appVariables.eventKey && event.matches && event.matches[1] && event.matches[1].alliances;\n    };\n    var populateEvent = function () {\n      var _ref4 = _asyncToGenerator(function* () {\n        if (!appVariables || !appVariables.eventKey) return;\n        if (validEvent(eventInfo)) {\n          LOG('eventInfo already in memory', eventInfo);\n          return;\n        }\n        var parsedEventInfo = JSON.parse(yield AsyncStorage.getItem(LOCALKEYS.EVENT));\n        if (validEvent(parsedEventInfo)) {\n          setEventInfo(parsedEventInfo);\n          LOG('eventInfo found in cache', parsedEventInfo);\n          return;\n        }\n        yield loadEventInfoApi(appVariables.eventKey);\n      });\n      return function populateEvent() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    populateEvent();\n  }, [appVariables.eventKey]);\n  useEffect(function () {\n    var populateColorDict = function () {\n      var _ref5 = _asyncToGenerator(function* () {\n        if (!userInfo || !userInfo.teamNumT) return;\n        var storedColorDict = yield AsyncStorage.getItem(LOCALKEYS.COLORDICT);\n        if (storedColorDict) {\n          var parsedColorDict = JSON.parse(storedColorDict);\n          if (parsedColorDict.teamNumT === userInfo.teamNumT) {\n            setColorDict(parsedColorDict);\n            LOG('color dict found in cache', parsedColorDict);\n            return;\n          }\n        }\n        var apiColorDict = yield BubbleApi.apiGetColorDict(userInfo.teamNumT);\n        setColorDict(apiColorDict);\n        yield AsyncStorage.setItem(LOCALKEYS.COLORDICT, JSON.stringify(apiColorDict));\n        LOG('color dict loaded from api');\n      });\n      return function populateColorDict() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    populateColorDict();\n  }, [userInfo.teamNumT]);\n  var onTimeout = function onTimeout() {\n    var phase = gameState.phase;\n    LOG('timeout', {\n      override: gameState.phaseOverride\n    });\n    if (!gameState.phaseOverride) setPhase(phase.forward, phase.forwardActions);\n  };\n  var coneUrl = 'http:' + (appVariables == null ? void 0 : (_appVariables$game2 = appVariables.game) == null ? void 0 : (_appVariables$game2$c = _appVariables$game2.counterDefs[0]) == null ? void 0 : (_appVariables$game2$c2 = _appVariables$game2$c.conditions[0]) == null ? void 0 : (_appVariables$game2$c3 = _appVariables$game2$c2.options[1]) == null ? void 0 : _appVariables$game2$c3.imagePointer);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Header, {\n      gameState: gameState,\n      maxGameTime: maxGameTime(),\n      onTimeout: onTimeout\n    }), coneUrl && _jsx(Image, {\n      style: styles.coneImage,\n      source: {\n        uri: coneUrl\n      }\n    }), _jsx(View, {\n      style: styles.scoutContainer,\n      children: gameState.phase === PHASES.select ? _jsx(ScoutPageSelect, {\n        gameState: gameState,\n        setGameState: setGameState\n      }) : _jsx(ScoutPageGame, {\n        gameState: gameState,\n        setGameState: setGameState,\n        appVariables: appVariables,\n        colorDict: colorDict\n      })\n    }), _jsx(ButtonsFwdBack, {\n      gameState: gameState,\n      setPhase: overridePhase\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  loginTitle: {\n    marginTop: 30,\n    marginBottom: 12\n  },\n  image: {\n    width: 192,\n    height: 51.5,\n    alignSelf: 'center',\n    marginBottom: 30,\n    marginTop: 100\n  },\n  scoutContainer: {\n    minWidth: \"100%\",\n    flex: 3,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 30,\n    minHeight: 480,\n    justifyContent: 'flex-start',\n    flexDirection: 'column'\n  },\n  coneImage: {\n    width: 32,\n    height: 32,\n    borderWidth: 2\n  }\n});","map":{"version":3,"names":["AsyncStorage","React","useContext","useEffect","useState","ERROR","LOG","AuthContext","BubbleApi","BlueAllianceApi","ACTIONS","LOCALKEYS","PHASES","CLOCKSTATES","Header","ScoutPageSelect","ScoutPageGame","ButtonsFwdBack","jsx","_jsx","jsxs","_jsxs","ScoutPage","_appVariables$game2","_appVariables$game2$c","_appVariables$game2$c2","_appVariables$game2$c3","_useContext","userInfo","appVariables","setAppVariables","eventInfo","setEventInfo","colorDict","setColorDict","lastChanged","setLastChanged","_useState","matchType","matchNumber","scoutTeamNumT","allianceColor","scoutSelectionValid","phase","select","phaseOverride","startTime","clockState","hidden","_useState2","_slicedToArray","gameState","setGameState","maxGameTime","_appVariables$game","game","autoTeleSeconds","doAction","action","clearConditions","clearMatchTeam","deleteCounts","deleteScout","incrementMatchNum","setItem","APPVAR","JSON","stringify","_objectSpread","defaultMatchNum","apiSetDefaultMatchNumber","makeScout","reloadMaxed","startClock","Date","running","hideClock","resetClock","stopped","submit","clearPhaseOverride","setPhaseOverride","setPhase","newPhase","actions","phaseUpdate","actionUpdates","map","updates","Object","assign","apply","concat","_toConsumableArray","overridePhase","allActions","populateLastChanged","_ref","_asyncToGenerator","apiLastChanged","apiGetLastChanged","arguments","setStartingMatch","appVar","defaultMatchType","populateAppVariables","_ref2","teamNumT","storedAppVariables","getItem","parsedAppVariables","parse","fetchedDate","apiAppVariables","apiGetAppVariables","loadEventInfoApi","_ref3","eventKey","apiEventInfo","fetchEventInfo","EVENT","_x","validEvent","event","matches","alliances","populateEvent","_ref4","parsedEventInfo","populateColorDict","_ref5","storedColorDict","COLORDICT","parsedColorDict","apiColorDict","apiGetColorDict","onTimeout","override","forward","forwardActions","coneUrl","counterDefs","conditions","options","imagePointer","View","style","styles","container","children","Image","coneImage","source","uri","scoutContainer","StyleSheet","create","flex","flexDirection","loginTitle","marginTop","marginBottom","image","width","height","alignSelf","minWidth","paddingLeft","paddingRight","paddingTop","minHeight","justifyContent","borderWidth"],"sources":["/Users/sgreene/src/cs1/pages/ScoutPage.js"],"sourcesContent":["import { StyleSheet, View, Image } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { useContext, useEffect, useState } from 'react';\n\nimport { ERROR, LOG } from '../logConfig';\nimport { AuthContext } from '../components/AuthProvider';\n\nimport BubbleApi from '../api/BubbleApi';\nimport BlueAllianceApi from '../api/BlueAllianceApi';\nimport { ACTIONS, LOCALKEYS, PHASES, CLOCKSTATES } from '../config';\n\nimport Header from '../components/Header';\nimport ScoutPageSelect from './ScoutPageSelect';\nimport ScoutPageGame from './ScoutPageGame';\nimport ButtonsFwdBack from '../components/ButtonsFwdBack';\n\nexport default function ScoutPage() {\n    const {\n        userInfo,\n        appVariables, setAppVariables,\n        eventInfo, setEventInfo,\n        colorDict, setColorDict,\n        lastChanged, setLastChanged,\n    } = useContext(AuthContext);\n\n    const [gameState, setGameState] = useState({\n        // selection screen\n        matchType: null,\n        matchNumber: null,\n        scoutTeamNumT: null,\n        allianceColor: null,\n        scoutSelectionValid: null,\n\n        // game running\n        phase: PHASES.select,\n        phaseOverride: false,\n        startTime: null,\n        clockState: CLOCKSTATES.hidden,\n    });\n\n    const maxGameTime = () => 150 + appVariables?.game?.autoTeleSeconds;\n\n    const doAction = action => {\n        LOG('action=', action);\n        switch (action) {\n            case ACTIONS.clearConditions:\n                break;\n            case ACTIONS.clearMatchTeam:\n                return { scoutTeamNumT: null, allianceColor: null };\n            case ACTIONS.deleteCounts:\n                break;\n            case ACTIONS.deleteScout:\n                break;\n            case ACTIONS.incrementMatchNum:\n                const matchNumber = gameState.matchNumber + 1;\n                AsyncStorage.setItem(\n                    LOCALKEYS.APPVAR,\n                    JSON.stringify({ ...appVariables, defaultMatchNum: matchNumber })\n                );\n                BubbleApi.apiSetDefaultMatchNumber(matchNumber);\n                return { matchNumber };\n            case ACTIONS.makeScout:\n                break;\n            case ACTIONS.reloadMaxed:\n                break;\n            case ACTIONS.startClock:\n                return { startTime: new Date(), clockState: CLOCKSTATES.running };\n            case ACTIONS.hideClock:\n                return { clockState: CLOCKSTATES.hidden };\n            case ACTIONS.resetClock:\n                // CountdownTimer resets automatically when state is stopped\n                return { startTime: null, clockState: CLOCKSTATES.stopped };\n            case ACTIONS.submit:\n                break;\n            case ACTIONS.clearPhaseOverride:\n                return { phaseOverride: false };\n            case ACTIONS.setPhaseOverride:\n                return { phaseOverride: true };\n            default:\n                ERROR('unknown action', action);\n        }\n        return {};\n    }\n\n    const setPhase = (newPhase, actions) => {\n        const phaseUpdate = { phase: newPhase };\n        const actionUpdates = actions ? actions.map(action => doAction(action)) : [];\n        const updates = Object.assign(phaseUpdate, ...actionUpdates);\n        LOG({ actions, actionUpdates, updates });\n        setGameState({ ...gameState, ...updates });\n    };\n\n    const overridePhase = (newPhase, actions) => {\n        const allActions = [ACTIONS.setPhaseOverride, ...actions];\n        setPhase(newPhase, allActions);\n    }\n\n    // get lastChanged from api - TODO refresh other info if it's stale\n    useEffect(() => {\n        const populateLastChanged = async () => {\n            const apiLastChanged = await BubbleApi.apiGetLastChanged();\n            setLastChanged(apiLastChanged);\n\n            LOG('last changed loaded from api', apiLastChanged);\n        };\n\n        populateLastChanged();\n    }, []); // Empty dependency array to run only on mount\n\n    // get appVariables from cache or api\n    useEffect(() => {\n        const setStartingMatch = appVar => {\n            setGameState({ ...gameState, matchType: appVar.defaultMatchType, matchNumber: appVar.defaultMatchNum });\n        };\n\n        const populateAppVariables = async () => {\n            if (appVariables && userInfo && appVariables.teamNumT === userInfo.teamNumT) {\n                LOG('app Variables already in memory', appVariables);\n                setStartingMatch(appVariables);\n                return;\n            }\n            // Check if appVariables is in AsyncStorage\n            const storedAppVariables = await AsyncStorage.getItem(LOCALKEYS.APPVAR);\n\n            if (storedAppVariables) {\n                // If it exists, set it in the state\n                const parsedAppVariables = JSON.parse(storedAppVariables);\n                parsedAppVariables.fetchedDate = new Date(parsedAppVariables.fetchedDate);\n                setAppVariables(parsedAppVariables);\n                LOG('app variables found in cache', parsedAppVariables);\n                setStartingMatch(parsedAppVariables);\n            } else {\n                // If not, fetch it from the API\n                const apiAppVariables = await BubbleApi.apiGetAppVariables();\n                await setAppVariables(apiAppVariables);\n\n                // Store it in AsyncStorage for future use\n                await AsyncStorage.setItem(LOCALKEYS.APPVAR, JSON.stringify(apiAppVariables));\n                LOG('app variables loaded from api', apiAppVariables);\n                setStartingMatch(apiAppVariables);\n            }\n        };\n\n        populateAppVariables();\n    }, []); // Empty dependency array to run only on mount\n\n    const loadEventInfoApi = async eventKey => {\n        const apiEventInfo = await BlueAllianceApi.fetchEventInfo(eventKey);\n        setEventInfo(apiEventInfo);\n\n        // Store it in AsyncStorage for future use\n        await AsyncStorage.setItem(LOCALKEYS.EVENT, JSON.stringify(apiEventInfo));\n        LOG('eventInfo loaded from api', apiEventInfo);\n    };\n\n    // get eventInfo from cache or API - depends on eventKey\n    useEffect(() => {\n        const validEvent = event => (\n            event\n            && event.eventKey === appVariables.eventKey\n            && event.matches\n            && event.matches[1]\n            && event.matches[1].alliances\n        );\n\n        const populateEvent = async () => {\n            if (!appVariables || !appVariables.eventKey) return;\n\n            // 1 - already in React state\n            if (validEvent(eventInfo)) {\n                LOG('eventInfo already in memory', eventInfo);\n                return;\n            }\n\n            // 2 - already in cache\n            const parsedEventInfo = JSON.parse(await AsyncStorage.getItem(LOCALKEYS.EVENT));\n            if (validEvent(parsedEventInfo)) {\n                setEventInfo(parsedEventInfo);\n                LOG('eventInfo found in cache', parsedEventInfo);\n                return;\n            }\n\n            // not found in cache\n            await loadEventInfoApi(appVariables.eventKey);\n        };\n\n        populateEvent();\n    }, [appVariables.eventKey]); // Trigger only when event changes\n\n    // get colorDict from cache or API - depends on userInfo.teamNumT\n    useEffect(() => {\n        const populateColorDict = async () => {\n            if (!userInfo || !userInfo.teamNumT) return;\n\n            const storedColorDict = await AsyncStorage.getItem(LOCALKEYS.COLORDICT);\n            if (storedColorDict) {\n                // If it exists, set it in the state\n                const parsedColorDict = JSON.parse(storedColorDict);\n\n                if (parsedColorDict.teamNumT === userInfo.teamNumT) {\n                    setColorDict(parsedColorDict);\n                    LOG('color dict found in cache', parsedColorDict);\n                    return;\n                }\n            }\n\n            // If not, fetch it from the API\n            const apiColorDict = await BubbleApi.apiGetColorDict(userInfo.teamNumT);\n            setColorDict(apiColorDict);\n\n            // Store it in AsyncStorage for future use\n            await AsyncStorage.setItem(LOCALKEYS.COLORDICT, JSON.stringify(apiColorDict));\n            LOG('color dict loaded from api');\n\n        };\n\n        populateColorDict();\n    }, [userInfo.teamNumT]); // Trigger only when appVariables changes\n\n    const onTimeout = () => {\n        const { phase } = gameState;\n        LOG('timeout', { override: gameState.phaseOverride });\n        if (!gameState.phaseOverride) setPhase(phase.forward, phase.forwardActions);\n    }\n\n    const coneUrl = 'http:' + appVariables?.game?.counterDefs[0]?.conditions[0]?.options[1]?.imagePointer;\n    return (\n        <View style={styles.container}>\n            <Header\n                gameState={gameState}\n                maxGameTime={maxGameTime()}\n                onTimeout={onTimeout}\n            />\n            {coneUrl && <Image style={styles.coneImage} source={{ uri: coneUrl }} />}\n            <View style={styles.scoutContainer}>\n                {gameState.phase === PHASES.select\n                    ? <ScoutPageSelect gameState={gameState} setGameState={setGameState} />\n                    : <ScoutPageGame\n                        gameState={gameState}\n                        setGameState={setGameState}\n                        appVariables={appVariables}\n                        colorDict={colorDict}\n                    />\n                }\n            </View>\n            <ButtonsFwdBack gameState={gameState} setPhase={overridePhase} />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n    },\n    loginTitle: {\n        marginTop: 30,\n        marginBottom: 12,\n    },\n    image: {\n        width: 192,\n        height: 51.5,\n        alignSelf: 'center',\n        marginBottom: 30,\n        marginTop: 100,\n    },\n    scoutContainer: {\n        minWidth: \"100%\",\n        flex: 3,\n        paddingLeft: 10,\n        paddingRight: 10,\n        paddingTop: 30,\n        minHeight: 480,\n        justifyContent: 'flex-start',\n        flexDirection: 'column',\n    },\n    coneImage: {\n        width: 32,\n        height: 32,\n        borderWidth: 2,\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}