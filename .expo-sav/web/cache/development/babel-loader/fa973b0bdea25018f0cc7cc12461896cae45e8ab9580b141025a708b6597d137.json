{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { useContext, useEffect, useState } from 'react';\nimport BubbleApi from \"../api/BubbleApi\";\nimport Styles from \"../styles/Styles\";\nimport { ACTIONS, LOCALKEYS, PHASES } from \"../config\";\nimport { AuthContext } from \"../components/AuthProvider\";\nimport BlueAllianceApi from \"../api/BlueAllianceApi\";\nimport Header from \"../components/Header\";\nimport ScoutPageSelect from \"./ScoutPageSelect\";\nimport ScoutPageGame from \"./ScoutPageGame\";\nimport ButtonsFwdBack from \"../components/ButtonsFwdBack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ScoutPage() {\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo,\n    appVariables = _useContext.appVariables,\n    setAppVariables = _useContext.setAppVariables,\n    eventInfo = _useContext.eventInfo,\n    setEventInfo = _useContext.setEventInfo,\n    colorDict = _useContext.colorDict,\n    setColorDict = _useContext.setColorDict,\n    lastChanged = _useContext.lastChanged,\n    setLastChanged = _useContext.setLastChanged;\n  var _useState = useState({\n      phase: PHASES.select,\n      startTime: null,\n      matchType: null,\n      matchNumber: null,\n      scoutTeamNumT: null,\n      allianceColor: null,\n      scoutSelectionValid: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    gameState = _useState2[0],\n    setGameState = _useState2[1];\n  var doAction = function doAction(action) {\n    switch (action) {\n      case ACTIONS.clearConditions:\n        break;\n      case ACTIONS.clearMatchTeam:\n        break;\n      case ACTIONS.deleteCounts:\n        break;\n      case ACTIONS.deleteScout:\n        break;\n      case ACTIONS.incrementMatchNum:\n        break;\n      case ACTIONS.makeScout:\n        break;\n      case ACTIONS.reloadMaxed:\n        break;\n      case ACTIONS.startClock:\n        setGameState(_objectSpread(_objectSpread({}, gameState), {}, {\n          startTime: new Date()\n        }));\n        break;\n      case ACTIONS.submit:\n        break;\n      default:\n        console.error('uknown action', action);\n    }\n  };\n  var setPhase = function setPhase(newPhase, actions) {\n    setGameState(_objectSpread(_objectSpread({}, gameState), {}, {\n      phase: newPhase\n    }));\n    actions.forEach(function (action) {\n      return doAction(action);\n    });\n  };\n  useEffect(function () {\n    var populateLastChanged = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var apiLastChanged = yield BubbleApi.apiGetLastChanged();\n        setLastChanged(apiLastChanged);\n        console.log('last changed loaded from api', apiLastChanged);\n      });\n      return function populateLastChanged() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    populateLastChanged();\n  }, []);\n  useEffect(function () {\n    var setStartingMatch = function setStartingMatch(appVar) {\n      setGameState(_objectSpread(_objectSpread({}, gameState), {}, {\n        matchType: appVar.defaultMatchType,\n        matchNumber: appVar.defaultMatchNum\n      }));\n    };\n    var populateAppVariables = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        if (appVariables && userInfo && appVariables.teamNumT === userInfo.teamNumT) {\n          console.log('app Variables already in memory', appVariables);\n          setStartingMatch(appVariables);\n          return;\n        }\n        var storedAppVariables = yield AsyncStorage.getItem(LOCALKEYS.APPVAR);\n        if (storedAppVariables) {\n          var parsedAppVariables = JSON.parse(storedAppVariables);\n          parsedAppVariables.fetchedDate = new Date(parsedAppVariables.fetchedDate);\n          setAppVariables(parsedAppVariables);\n          console.log('app variables found in cache', parsedAppVariables);\n          setStartingMatch(parsedAppVariables);\n        } else {\n          var apiAppVariables = yield BubbleApi.apiGetAppVariables();\n          yield setAppVariables(apiAppVariables);\n          yield AsyncStorage.setItem(LOCALKEYS.APPVAR, JSON.stringify(apiAppVariables));\n          console.log('app variables loaded from api', apiAppVariables);\n          setStartingMatch(apiAppVariables);\n        }\n      });\n      return function populateAppVariables() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    populateAppVariables();\n  }, []);\n  var loadEventInfoApi = function () {\n    var _ref3 = _asyncToGenerator(function* (eventKey) {\n      var apiEventInfo = yield BlueAllianceApi.fetchEventInfo(eventKey);\n      setEventInfo(apiEventInfo);\n      yield AsyncStorage.setItem(LOCALKEYS.EVENT, JSON.stringify(apiEventInfo));\n      console.log('eventInfo loaded from api', apiEventInfo);\n    });\n    return function loadEventInfoApi(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var validEvent = function validEvent(event) {\n      return event && event.eventKey === appVariables.eventKey && event.matches && event.matches[1] && event.matches[1].alliances;\n    };\n    var populateEvent = function () {\n      var _ref4 = _asyncToGenerator(function* () {\n        if (!appVariables || !appVariables.eventKey) return;\n        if (validEvent(eventInfo)) {\n          console.log('eventInfo already in memory', eventInfo);\n          return;\n        }\n        var parsedEventInfo = JSON.parse(yield AsyncStorage.getItem(LOCALKEYS.EVENT));\n        if (validEvent(parsedEventInfo)) {\n          setEventInfo(parsedEventInfo);\n          console.log('eventInfo found in cache', parsedEventInfo);\n          return;\n        }\n        yield loadEventInfoApi(appVariables.eventKey);\n      });\n      return function populateEvent() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    populateEvent();\n  }, [appVariables.eventKey]);\n  useEffect(function () {\n    var populateColorDict = function () {\n      var _ref5 = _asyncToGenerator(function* () {\n        if (!userInfo || !userInfo.teamNumT) return;\n        var storedColorDict = yield AsyncStorage.getItem(LOCALKEYS.COLORDICT);\n        if (storedColorDict) {\n          var parsedColorDict = JSON.parse(storedColorDict);\n          if (parsedColorDict.teamNumT === userInfo.teamNumT) {\n            setColorDict(parsedColorDict);\n            console.log('color dict found in cache', parsedColorDict);\n            return;\n          }\n        }\n        var apiColorDict = yield BubbleApi.apiGetColorDict(userInfo.teamNumT);\n        setColorDict(apiColorDict);\n        yield AsyncStorage.setItem(LOCALKEYS.COLORDICT, JSON.stringify(apiColorDict));\n        console.log('color dict loaded from api');\n      });\n      return function populateColorDict() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    populateColorDict();\n  }, [userInfo.teamNumT]);\n  return _jsxs(View, {\n    children: [_jsx(Header, {\n      gameState: gameState\n    }), _jsx(View, {\n      style: Styles.scoutContainer,\n      children: gameState.phase === PHASES.select ? _jsx(ScoutPageSelect, {\n        gameState: gameState,\n        setGameState: setGameState,\n        appVariables: appVariables\n      }) : _jsx(ScoutPageGame, {\n        gameState: gameState,\n        setGameState: setGameState\n      })\n    }), _jsx(ButtonsFwdBack, {\n      gameState: gameState,\n      setGameState: setGameState,\n      setPhase: setPhase\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  bottomNotes: {\n    marginTop: 60,\n    marginBottom: 100\n  },\n  loginTitle: {\n    marginTop: 30,\n    marginBottom: 12\n  },\n  image: {\n    width: 192,\n    height: 51.5,\n    alignSelf: 'center',\n    marginBottom: 30,\n    marginTop: 100\n  }\n});","map":{"version":3,"names":["AsyncStorage","React","useContext","useEffect","useState","BubbleApi","Styles","ACTIONS","LOCALKEYS","PHASES","AuthContext","BlueAllianceApi","Header","ScoutPageSelect","ScoutPageGame","ButtonsFwdBack","jsx","_jsx","jsxs","_jsxs","ScoutPage","_useContext","userInfo","appVariables","setAppVariables","eventInfo","setEventInfo","colorDict","setColorDict","lastChanged","setLastChanged","_useState","phase","select","startTime","matchType","matchNumber","scoutTeamNumT","allianceColor","scoutSelectionValid","_useState2","_slicedToArray","gameState","setGameState","doAction","action","clearConditions","clearMatchTeam","deleteCounts","deleteScout","incrementMatchNum","makeScout","reloadMaxed","startClock","_objectSpread","Date","submit","console","error","setPhase","newPhase","actions","forEach","populateLastChanged","_ref","_asyncToGenerator","apiLastChanged","apiGetLastChanged","log","apply","arguments","setStartingMatch","appVar","defaultMatchType","defaultMatchNum","populateAppVariables","_ref2","teamNumT","storedAppVariables","getItem","APPVAR","parsedAppVariables","JSON","parse","fetchedDate","apiAppVariables","apiGetAppVariables","setItem","stringify","loadEventInfoApi","_ref3","eventKey","apiEventInfo","fetchEventInfo","EVENT","_x","validEvent","event","matches","alliances","populateEvent","_ref4","parsedEventInfo","populateColorDict","_ref5","storedColorDict","COLORDICT","parsedColorDict","apiColorDict","apiGetColorDict","View","children","style","scoutContainer","styles","StyleSheet","create","bottomNotes","marginTop","marginBottom","loginTitle","image","width","height","alignSelf"],"sources":["/Users/sgreene/src/cs1/pages/ScoutPage.js"],"sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport BubbleApi from '../api/BubbleApi';\n\nimport Styles from '../styles/Styles';\nimport { ACTIONS, LOCALKEYS, PHASES } from '../config';\nimport { AuthContext } from '../components/AuthProvider';\nimport BlueAllianceApi from '../api/BlueAllianceApi';\nimport Header from '../components/Header';\nimport ScoutPageSelect from './ScoutPageSelect';\nimport ScoutPageGame from './ScoutPageGame';\nimport ButtonsFwdBack from '../components/ButtonsFwdBack';\n\nexport default function ScoutPage() {\n    const {\n        userInfo,\n        appVariables, setAppVariables,\n        eventInfo, setEventInfo,\n        colorDict, setColorDict,\n        lastChanged, setLastChanged,\n    } = useContext(AuthContext);\n\n    const [gameState, setGameState] = useState({\n        phase: PHASES.select,\n        startTime: null,\n        matchType: null,\n        matchNumber: null,\n        scoutTeamNumT: null,\n        allianceColor: null,\n        scoutSelectionValid: null,\n    });\n\n    const doAction = action => {\n        switch(action) {\n            case ACTIONS.clearConditions:\n                break;\n            case ACTIONS.clearMatchTeam:\n                break;\n            case ACTIONS.deleteCounts:\n                break;\n            case ACTIONS.deleteScout:\n                break;\n            case ACTIONS.incrementMatchNum:\n                break;\n            case ACTIONS.makeScout:\n                break;\n            case ACTIONS.reloadMaxed:\n                break;\n            case ACTIONS.startClock:\n                setGameState({ ...gameState, startTime: new Date() });\n                break;\n            case ACTIONS.submit:\n                break;\n            default:\n                console.error('uknown action', action);\n        }\n    }\n\n    const setPhase = (newPhase, actions) => {\n        setGameState({ ...gameState, phase: newPhase });\n        actions.forEach(action => doAction(action));\n    };\n\n    // get lastChanged from api - TODO refresh other info if it's stale\n    useEffect(() => {\n        const populateLastChanged = async () => {\n            const apiLastChanged = await BubbleApi.apiGetLastChanged();\n            setLastChanged(apiLastChanged);\n\n            console.log('last changed loaded from api', apiLastChanged);\n        };\n\n        populateLastChanged();\n    }, []); // Empty dependency array to run only on mount\n\n    // get appVariables from cache or api\n    useEffect(() => {\n        const setStartingMatch = appVar => {\n            setGameState({...gameState, matchType: appVar.defaultMatchType, matchNumber: appVar.defaultMatchNum});\n        };\n\n        const populateAppVariables = async () => {\n            if (appVariables && userInfo && appVariables.teamNumT === userInfo.teamNumT) {\n                console.log('app Variables already in memory', appVariables);\n                setStartingMatch(appVariables);\n                return;\n            }\n            // Check if appVariables is in AsyncStorage\n            const storedAppVariables = await AsyncStorage.getItem(LOCALKEYS.APPVAR);\n\n            if (storedAppVariables) {\n                // If it exists, set it in the state\n                const parsedAppVariables = JSON.parse(storedAppVariables);\n                parsedAppVariables.fetchedDate = new Date(parsedAppVariables.fetchedDate);\n                setAppVariables(parsedAppVariables);\n                console.log('app variables found in cache', parsedAppVariables);\n                setStartingMatch(parsedAppVariables);\n            } else {\n                // If not, fetch it from the API\n                const apiAppVariables = await BubbleApi.apiGetAppVariables();\n                await setAppVariables(apiAppVariables);\n\n                // Store it in AsyncStorage for future use\n                await AsyncStorage.setItem(LOCALKEYS.APPVAR, JSON.stringify(apiAppVariables));\n                console.log('app variables loaded from api', apiAppVariables);\n                setStartingMatch(apiAppVariables);\n            }\n        };\n\n        populateAppVariables();\n    }, []); // Empty dependency array to run only on mount\n\n    const loadEventInfoApi = async eventKey => {\n        const apiEventInfo = await BlueAllianceApi.fetchEventInfo(eventKey);\n        setEventInfo(apiEventInfo);\n\n        // Store it in AsyncStorage for future use\n        await AsyncStorage.setItem(LOCALKEYS.EVENT, JSON.stringify(apiEventInfo));\n        console.log('eventInfo loaded from api', apiEventInfo);\n    };\n\n    // get eventInfo from cache or API - depends on eventKey\n    useEffect(() => {\n        const validEvent = event => (\n            event \n            && event.eventKey === appVariables.eventKey\n            && event.matches\n            && event.matches[1]\n            && event.matches[1].alliances\n        );\n\n        const populateEvent = async () => {\n            if (!appVariables || !appVariables.eventKey) return;\n\n            // 1 - already in React state\n            if (validEvent(eventInfo)) {\n                console.log('eventInfo already in memory', eventInfo);\n                return;\n            }\n\n            // 2 - already in cache\n            const parsedEventInfo = JSON.parse(await AsyncStorage.getItem(LOCALKEYS.EVENT));\n            if (validEvent(parsedEventInfo)) {\n                setEventInfo(parsedEventInfo);\n                console.log('eventInfo found in cache', parsedEventInfo);\n                return;\n            }\n\n            // not found in cache\n            await loadEventInfoApi(appVariables.eventKey);\n        };\n\n        populateEvent();\n    }, [appVariables.eventKey]); // Trigger only when event changes\n\n    // get colorDict from cache or API - depends on userInfo.teamNumT\n    useEffect(() => {\n        const populateColorDict = async () => {\n            if (!userInfo || !userInfo.teamNumT) return;\n\n            const storedColorDict = await AsyncStorage.getItem(LOCALKEYS.COLORDICT);\n            if (storedColorDict) {\n                // If it exists, set it in the state\n                const parsedColorDict = JSON.parse(storedColorDict);\n\n                if (parsedColorDict.teamNumT === userInfo.teamNumT) {\n                    setColorDict(parsedColorDict);\n                    console.log('color dict found in cache', parsedColorDict);\n                    return;\n                }\n            }\n\n            // If not, fetch it from the API\n            const apiColorDict = await BubbleApi.apiGetColorDict(userInfo.teamNumT);\n            setColorDict(apiColorDict);\n\n            // Store it in AsyncStorage for future use\n            await AsyncStorage.setItem(LOCALKEYS.COLORDICT, JSON.stringify(apiColorDict));\n            console.log('color dict loaded from api');\n\n        };\n\n        populateColorDict();\n    }, [userInfo.teamNumT]); // Trigger only when appVariables changes\n\n    return (\n        <View>\n            <Header gameState={gameState}/>\n            <View style={Styles.scoutContainer}>\n                {gameState.phase === PHASES.select \n                    ? <ScoutPageSelect gameState={gameState} setGameState={setGameState} appVariables={appVariables} />\n                    : <ScoutPageGame gameState={gameState} setGameState={setGameState} />\n                }\n            </View>\n            <ButtonsFwdBack gameState={gameState} setGameState={setGameState} setPhase={setPhase}/>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    bottomNotes: {\n        marginTop: 60,\n        marginBottom: 100,\n    },\n    loginTitle: {\n        marginTop: 30,\n        marginBottom: 12,\n    },\n    image: {\n        width: 192,\n        height: 51.5,\n        alignSelf: 'center',\n        marginBottom: 30,\n        marginTop: 100,\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}