{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport { NativeAppEventEmitter } from \"react-native-web/dist/index\";\nvar RNFetchBlob = NativeModules.RNFetchBlob;\nvar emitter = DeviceEventEmitter;\nvar RNFetchBlobWriteStream = function () {\n  function RNFetchBlobWriteStream(streamId, encoding, append) {\n    _classCallCheck(this, RNFetchBlobWriteStream);\n    this.id = streamId;\n    this.encoding = encoding;\n    this.append = append;\n  }\n  _createClass(RNFetchBlobWriteStream, [{\n    key: \"write\",\n    value: function write(data) {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        try {\n          var method = _this.encoding === 'ascii' ? 'writeArrayChunk' : 'writeChunk';\n          if (_this.encoding.toLocaleLowerCase() === 'ascii' && !Array.isArray(data)) {\n            reject('ascii input data must be an Array');\n            return;\n          }\n          RNFetchBlob[method](_this.id, data, function (error) {\n            if (error) reject(error);else resolve();\n          });\n        } catch (err) {\n          reject(err);\n        }\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this2 = this;\n      return new Promise(function (resolve, reject) {\n        try {\n          RNFetchBlob.closeStream(_this2.id, function () {\n            resolve();\n          });\n        } catch (err) {\n          reject(err);\n        }\n      });\n    }\n  }]);\n  return RNFetchBlobWriteStream;\n}();\nexport { RNFetchBlobWriteStream as default };","map":{"version":3,"names":["NativeAppEventEmitter","RNFetchBlob","NativeModules","emitter","DeviceEventEmitter","RNFetchBlobWriteStream","streamId","encoding","append","_classCallCheck","id","_createClass","key","value","write","data","_this","Promise","resolve","reject","method","toLocaleLowerCase","Array","isArray","error","err","close","_this2","closeStream","default"],"sources":["/Users/sgreene/src/cs1/node_modules/react-native-fetch-blob/class/RNFetchBlobWriteStream.js"],"sourcesContent":["// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport {\n NativeModules,\n DeviceEventEmitter,\n NativeAppEventEmitter,\n} from 'react-native'\n\nconst RNFetchBlob = NativeModules.RNFetchBlob\nconst emitter = DeviceEventEmitter\n\nexport default class RNFetchBlobWriteStream {\n\n  id : string;\n  encoding : string;\n  append : bool;\n\n  constructor(streamId:string, encoding:string, append:string) {\n    this.id = streamId\n    this.encoding = encoding\n    this.append = append\n  }\n\n  write(data:string) {\n    return new Promise((resolve, reject) => {\n      try {\n        let method = this.encoding === 'ascii' ? 'writeArrayChunk' : 'writeChunk'\n        if(this.encoding.toLocaleLowerCase() === 'ascii' && !Array.isArray(data)) {\n            reject('ascii input data must be an Array')\n            return\n        }\n        RNFetchBlob[method](this.id, data, (error) => {\n          if(error)\n            reject(error)\n          else\n            resolve()\n        })\n      } catch(err) {\n        reject(err)\n      }\n    })\n  }\n\n  close() {\n    return new Promise((resolve, reject) => {\n      try {\n        RNFetchBlob.closeStream(this.id, () => {\n          resolve()\n        })\n      } catch (err) {\n        reject(err)\n      }\n    })\n  }\n\n}\n"],"mappings":";;;;SAOCA,qBAAqB;AAGtB,IAAMC,WAAW,GAAGC,aAAa,CAACD,WAAW;AAC7C,IAAME,OAAO,GAAGC,kBAAkB;AAAA,IAEbC,sBAAsB;EAMzC,SAAAA,uBAAYC,QAAe,EAAEC,QAAe,EAAEC,MAAa,EAAE;IAAAC,eAAA,OAAAJ,sBAAA;IAC3D,IAAI,CAACK,EAAE,GAAGJ,QAAQ;IAClB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;EAACG,YAAA,CAAAN,sBAAA;IAAAO,GAAA;IAAAC,KAAA,EAED,SAAAC,MAAMC,IAAW,EAAE;MAAA,IAAAC,KAAA;MACjB,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QACtC,IAAI;UACF,IAAIC,MAAM,GAAGJ,KAAI,CAACT,QAAQ,KAAK,OAAO,GAAG,iBAAiB,GAAG,YAAY;UACzE,IAAGS,KAAI,CAACT,QAAQ,CAACc,iBAAiB,CAAC,CAAC,KAAK,OAAO,IAAI,CAACC,KAAK,CAACC,OAAO,CAACR,IAAI,CAAC,EAAE;YACtEI,MAAM,CAAC,mCAAmC,CAAC;YAC3C;UACJ;UACAlB,WAAW,CAACmB,MAAM,CAAC,CAACJ,KAAI,CAACN,EAAE,EAAEK,IAAI,EAAE,UAACS,KAAK,EAAK;YAC5C,IAAGA,KAAK,EACNL,MAAM,CAACK,KAAK,CAAC,MAEbN,OAAO,CAAC,CAAC;UACb,CAAC,CAAC;QACJ,CAAC,CAAC,OAAMO,GAAG,EAAE;UACXN,MAAM,CAACM,GAAG,CAAC;QACb;MACF,CAAC,CAAC;IACJ;EAAC;IAAAb,GAAA;IAAAC,KAAA,EAED,SAAAa,MAAA,EAAQ;MAAA,IAAAC,MAAA;MACN,OAAO,IAAIV,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QACtC,IAAI;UACFlB,WAAW,CAAC2B,WAAW,CAACD,MAAI,CAACjB,EAAE,EAAE,YAAM;YACrCQ,OAAO,CAAC,CAAC;UACX,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;UACZN,MAAM,CAACM,GAAG,CAAC;QACb;MACF,CAAC,CAAC;IACJ;EAAC;EAAA,OAAApB,sBAAA;AAAA;AAAA,SA1CkBA,sBAAsB,IAAAwB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}