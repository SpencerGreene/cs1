{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AppColors from \"../styles/AppColors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TeamPicker6 = function TeamPicker6(_ref) {\n  var choicesRed = _ref.choicesRed,\n    choicesBlue = _ref.choicesBlue,\n    onOptionSelect = _ref.onOptionSelect,\n    scoutTeamNumT = _ref.scoutTeamNumT;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedOption = _useState2[0],\n    setSelectedOption = _useState2[1];\n  var handleOptionClick = function handleOptionClick(choice, color) {\n    setSelectedOption(choice);\n    onOptionSelect(choice, color);\n  };\n  var resetOption = function resetOption() {\n    setSelectedOption(null);\n  };\n  useEffect(function () {\n    if (scoutTeamNumT === null && selectedOption !== null) {\n      setSelectedOption(null);\n    }\n  }, [scoutTeamNumT]);\n  var teamButton = function teamButton(teamKey, index, color) {\n    var choice = teamKey.substring(3);\n    return _jsx(Pressable, {\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [styles.optionButton, selectedOption === choice ? styles.selectedButton[color] : null, pressed && selectedOption === null ? styles.pressedButton : null];\n      },\n      onPress: function onPress() {\n        return handleOptionClick(choice, color);\n      },\n      children: _jsx(Text, {\n        style: [styles.buttonText, styles.buttonText[color], selectedOption === choice ? styles.buttonText.selected : null],\n        children: choice\n      })\n    }, index);\n  };\n  return _jsxs(View, {\n    style: styles.optionContainer,\n    children: [choicesRed.map(function (teamKey, index) {\n      return teamButton(teamKey, index, 'red');\n    }), choicesBlue.map(function (teamKey, index) {\n      return teamButton(teamKey, index, 'blue');\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  optionContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  optionButton: {\n    backgroundColor: AppColors.background,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginVertical: 5,\n    minWidth: 60,\n    borderWidth: 1,\n    borderColor: AppColors.lightGray\n  },\n  selectedButton: {\n    red: {\n      backgroundColor: AppColors.frcRed\n    },\n    blue: {\n      backgroundColor: AppColors.frcBlue\n    }\n  },\n  pressedButton: {\n    backgroundColor: 'gray'\n  },\n  buttonText: {\n    fontWeight: 600,\n    red: {\n      color: AppColors.frcRed\n    },\n    blue: {\n      color: AppColors.frcBlue\n    },\n    selected: {\n      color: AppColors.surface\n    }\n  }\n});\nexport default TeamPicker6;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Pressable","StyleSheet","AppColors","jsx","_jsx","jsxs","_jsxs","TeamPicker6","_ref","choicesRed","choicesBlue","onOptionSelect","scoutTeamNumT","_useState","_useState2","_slicedToArray","selectedOption","setSelectedOption","handleOptionClick","choice","color","resetOption","teamButton","teamKey","index","substring","style","_ref2","pressed","styles","optionButton","selectedButton","pressedButton","onPress","children","buttonText","selected","optionContainer","map","create","flexDirection","justifyContent","backgroundColor","background","padding","borderRadius","alignItems","marginVertical","minWidth","borderWidth","borderColor","lightGray","red","frcRed","blue","frcBlue","fontWeight","surface"],"sources":["/Users/sgreene/src/cs1/components/TeamPicker6.js"],"sourcesContent":["// TeamPicker6.js\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, Pressable, StyleSheet } from 'react-native';\nimport AppColors from '../styles/AppColors';\n\nconst TeamPicker6 = ({ choicesRed, choicesBlue, onOptionSelect, scoutTeamNumT }) => {\n    const [selectedOption, setSelectedOption] = useState(null);\n\n    const handleOptionClick = (choice, color) => {\n        setSelectedOption(choice);\n        onOptionSelect(choice, color);\n    };\n\n    const resetOption = () => {\n        setSelectedOption(null);\n    }\n\n    useEffect(() => {\n        if (scoutTeamNumT === null && selectedOption !== null) {\n            setSelectedOption(null);\n        }\n    }, [scoutTeamNumT]);\n\n    const teamButton = (teamKey, index, color) => {\n        const choice = teamKey.substring(3);\n        return (\n            <Pressable\n                key={index}\n                style={({ pressed }) => [\n                    styles.optionButton,\n                    selectedOption === choice ? styles.selectedButton[color] : null,\n                    pressed && selectedOption === null ? styles.pressedButton : null,\n                ]}\n                onPress={() => handleOptionClick(choice, color)}\n            >\n                <Text style={[\n                    styles.buttonText,\n                    styles.buttonText[color],\n                    selectedOption === choice ? styles.buttonText.selected : null,\n                ]}>{choice}</Text>\n            </Pressable>\n        );\n    };\n\n    return (\n        <View style={styles.optionContainer}>\n            {choicesRed.map((teamKey, index) => teamButton(teamKey, index, 'red'))}\n            {choicesBlue.map((teamKey, index) => teamButton(teamKey, index, 'blue'))}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    optionContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n    },\n    optionButton: {\n        backgroundColor: AppColors.background,\n        padding: 10,\n        borderRadius: 5,\n        alignItems: 'center',\n        marginVertical: 5,\n        minWidth: 60,\n        borderWidth: 1,\n        borderColor: AppColors.lightGray,\n    },\n    selectedButton: {\n        red: {\n            backgroundColor: AppColors.frcRed,\n        },\n        blue: {\n            backgroundColor: AppColors.frcBlue,\n        },\n    },\n    pressedButton: {\n        backgroundColor: 'gray',\n    },\n    buttonText: {\n        fontWeight: 600,\n        red: {\n            color: AppColors.frcRed,\n        },\n        blue: {\n            color: AppColors.frcBlue,\n        },\n        selected: {\n            color: AppColors.surface,\n        }\n    },\n});\n\nexport default TeamPicker6;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}