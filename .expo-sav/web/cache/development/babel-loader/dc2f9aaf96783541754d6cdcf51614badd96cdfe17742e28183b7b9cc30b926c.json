{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"./Button\";\nimport AppColors from \"../styles/AppColors\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ButtonsFwdBack(_ref) {\n  var phase = _ref.phase;\n  return _jsxs(View, {\n    style: styles.fwdBackContainer,\n    children: [phase.backLabel && showButton(phase.backLabel, phase.back, \"back\"), phase.forwardLabel && showButton(phase.forwardLabel, phase.forward, \"forward\")]\n  });\n}\nfunction showButton(label, newPhase, theme) {\n  var onPress = function onPress() {\n    console.log('button pressed', {\n      label: label,\n      newPhase: newPhase,\n      theme: theme\n    });\n    alert(`${newPhase.display} pressed`);\n  };\n  return _jsx(Button, {\n    theme: theme,\n    label: label,\n    onPress: onPress\n  });\n}\nvar styles = StyleSheet.create({\n  fwdBackContainer: {\n    flex: 1,\n    height: 40,\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 20,\n    justifyContent: 'center',\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["Button","AppColors","jsxs","_jsxs","jsx","_jsx","ButtonsFwdBack","_ref","phase","View","style","styles","fwdBackContainer","children","backLabel","showButton","back","forwardLabel","forward","label","newPhase","theme","onPress","console","log","alert","display","StyleSheet","create","flex","height","marginLeft","marginRight","marginTop","justifyContent","flexDirection"],"sources":["/Users/sgreene/src/cs1/components/ButtonsFwdBack.js"],"sourcesContent":["import { StyleSheet, View } from 'react-native';\nimport Button from './Button';\nimport AppColors from '../styles/AppColors';\n\nexport default function ButtonsFwdBack({ phase }) {\n    return (\n        <View style={styles.fwdBackContainer}>\n            {phase.backLabel && showButton(phase.backLabel, phase.back, \"back\")}\n            {phase.forwardLabel && showButton(phase.forwardLabel, phase.forward, \"forward\")}\n        </View>\n    );\n}\n\nfunction showButton(label, newPhase, theme) {\n    const onPress = () => { \n        console.log('button pressed', {label, newPhase, theme});\n        alert(`${newPhase.display} pressed`); \n    }\n    return (\n        <Button theme={theme} label={label} onPress={onPress} />\n    );\n}\n\nconst styles = StyleSheet.create({\n    fwdBackContainer: {\n        flex: 1,\n        height: 40,\n        marginLeft: 10,\n        marginRight: 10,\n        marginTop: 20,\n        justifyContent: 'center',   // vertical center\n        flexDirection: 'row',       // place buttons in a row\n    },\n})"],"mappings":";;AACA,OAAOA,MAAM;AACb,OAAOC,SAAS;AAA4B,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE5C,eAAe,SAASC,cAAcA,CAAAC,IAAA,EAAY;EAAA,IAATC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAC1C,OACIL,KAAA,CAACM,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,gBAAiB;IAAAC,QAAA,GAChCL,KAAK,CAACM,SAAS,IAAIC,UAAU,CAACP,KAAK,CAACM,SAAS,EAAEN,KAAK,CAACQ,IAAI,EAAE,MAAM,CAAC,EAClER,KAAK,CAACS,YAAY,IAAIF,UAAU,CAACP,KAAK,CAACS,YAAY,EAAET,KAAK,CAACU,OAAO,EAAE,SAAS,CAAC;EAAA,CAC7E,CAAC;AAEf;AAEA,SAASH,UAAUA,CAACI,KAAK,EAAEC,QAAQ,EAAEC,KAAK,EAAE;EACxC,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IAClBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE;MAACL,KAAK,EAALA,KAAK;MAAEC,QAAQ,EAARA,QAAQ;MAAEC,KAAK,EAALA;IAAK,CAAC,CAAC;IACvDI,KAAK,CAAE,GAAEL,QAAQ,CAACM,OAAQ,UAAS,CAAC;EACxC,CAAC;EACD,OACIrB,IAAA,CAACL,MAAM;IAACqB,KAAK,EAAEA,KAAM;IAACF,KAAK,EAAEA,KAAM;IAACG,OAAO,EAAEA;EAAQ,CAAE,CAAC;AAEhE;AAEA,IAAMX,MAAM,GAAGgB,UAAU,CAACC,MAAM,CAAC;EAC7BhB,gBAAgB,EAAE;IACdiB,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,EAAE;IACfC,SAAS,EAAE,EAAE;IACbC,cAAc,EAAE,QAAQ;IACxBC,aAAa,EAAE;EACnB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}